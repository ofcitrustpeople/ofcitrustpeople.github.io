(function(){"use strict";var e={989:function(e,n,t){var r=t(9242),s=t(3396);const a={id:"app"},o={class:"mycontainer"};function d(e,n,t,r,d,i){const u=(0,s.up)("Menu"),c=(0,s.up)("router-view");return(0,s.wg)(),(0,s.iD)("div",a,[(0,s.Wm)(u),(0,s._)("div",o,[(0,s.Wm)(c)])])}t(7658);var i=t(7139);function u(e,n,t,a,o,d){const u=(0,s.up)("MenuItem");return(0,s.wg)(),(0,s.iD)("div",{class:(0,i.C_)(["menu",{"small-menu":e.smallMenu}])},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(e.menuTree,((n,t)=>((0,s.wg)(),(0,s.j4)(u,{key:t,data:n.children,label:n.label,link:n.link,icon:n.icon,depth:0,smallMenu:e.smallMenu,onClick:(0,r.iM)((n=>t===e.menuTree.length-1?d.logOut():null),["prevent"]),class:(0,i.C_)({"bottom-fixed":t===e.menuTree.length-1})},null,8,["data","label","link","icon","smallMenu","onClick","class"])))),128))],2)}const c={class:"left"},l={key:0,class:"material-icons-outlined"},p={key:0,class:"right"};function m(e,n,t,a,o,d){const u=(0,s.up)("router-link"),m=(0,s.up)("menu-item",!0);return(0,s.wg)(),(0,s.iD)("div",{class:(0,i.C_)(["menu-item",{opened:e.expanded}])},[(0,s._)("div",{class:"label",onClick:n[0]||(n[0]=e=>d.toggleMenu()),style:(0,i.j5)({paddingLeft:20*t.depth+20+"px"})},[(0,s._)("div",c,[(0,s.Wm)(u,{to:t.link,class:"nav-link"},{default:(0,s.w5)((()=>[(0,s._)("span",null,[t.icon?((0,s.wg)(),(0,s.iD)("i",l,(0,i.zw)(t.icon),1)):(0,s.kq)("",!0)]),d.showLabel?((0,s.wg)(),(0,s.iD)("span",{key:0,class:(0,i.C_)({test:!t.smallMenu})},(0,i.zw)(t.label),3)):(0,s.kq)("",!0)])),_:1},8,["to"])]),t.data?((0,s.wg)(),(0,s.iD)("div",p,[(0,s._)("i",{class:(0,i.C_)(["expand material-icons-outlined",{opened:e.expanded}])},"expand_more",2)])):(0,s.kq)("",!0)],4),(0,s.wy)((0,s._)("div",{class:(0,i.C_)([{"small-menu":t.smallMenu},"items-container"]),style:(0,i.j5)({height:e.containerHeight}),ref:"container"},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(t.data,((n,r)=>((0,s.wg)(),(0,s.j4)(m,{class:(0,i.C_)({opened:e.showChildren}),key:r,data:n.children,label:n.label,link:n.link,icon:n.icon,depth:t.depth+1,smallMenu:t.smallMenu},null,8,["class","data","label","link","icon","depth","smallMenu"])))),128))],6),[[r.F8,e.showChildren]])],2)}var _={name:"menu-item",data:()=>({showChildren:!1,expanded:!1,containerHeight:0}),props:{data:{type:Array},label:{type:String},link:{type:String},icon:{type:String},depth:{type:Number},smallMenu:{type:Boolean}},computed:{showLabel(){return!this.smallMenu||this.depth>0}},methods:{toggleMenu(){this.expanded=!this.expanded,this.showChildren?(this.containerHeight=this.$refs["container"].scrollHeight+"px",this.$refs["container"].style.overflow="hidden",setTimeout((()=>{this.containerHeight="0px"}),10),setTimeout((()=>{this.showChildren=!1}),300)):(this.showChildren=!0,this.$nextTick((()=>{this.containerHeight=this.$refs["container"].scrollHeight+"px",setTimeout((()=>{this.containerHeight="fit-content",-1!=navigator.userAgent.indexOf("Firefox")&&(this.containerHeight="-moz-max-content"),this.$refs["container"].style.overflow="visible"}),300)})))}}},h=t(89);const g=(0,h.Z)(_,[["render",m],["__scopeId","data-v-3e60ff69"]]);var f=g,E={name:"recursive-menu",data:()=>({smallMenu:!1,menuTree:[{label:"Домой",link:"/home",icon:"home"},{label:"Студенты",link:"",icon:"school",children:[{label:"Список студентов",link:"/students"},{label:"Направления",link:"/directions"},{label:"Профили",link:"/profiles"},{label:"Группы",link:"/groups"},{label:"Курсовые",link:"/courseworks"}]},{label:"Слушатели",link:"",icon:"contact_page",children:[{label:"Список слушателей",link:"/listeners"},{label:"Плательщики",link:"/payers"},{label:"Группы",link:"/lgroups"},{label:"Договора",link:"/contracts"},{label:"Программы",link:"/programs"},{label:"График платежей",link:"/payments"}]},{label:"Расписание",link:"",icon:"calendar_month",children:[{label:"Нагрузка",link:"/ScheduleLoads"},{label:"Аудитории",link:"/audits"}]},{label:"Excel",link:"/xlparse",icon:"description"},{label:"Настройки",link:"/profile",icon:"settings"},{label:"Выйти",link:"",icon:"logout"}]}),components:{MenuItem:f},methods:{logOut(){this.$store.dispatch("auth/logout"),this.$router.push("/login")}}};const b=(0,h.Z)(E,[["render",u],["__scopeId","data-v-263e8250"]]);var y=b,S={created(){this.$store.dispatch("auth/checkTokenExpiration")},components:{Menu:y},computed:{currentUser(){return this.$store.state.auth.user}},methods:{logOut(){this.$store.dispatch("auth/logout"),this.$router.push("/login")}}};const T=(0,h.Z)(S,[["render",d]]);var $=T,A=t(2483);const O={class:"container"},N={class:"jumbotron"};function I(e,n,t,r,a,o){return(0,s.wg)(),(0,s.iD)("div",O,[(0,s._)("header",N,[(0,s._)("h3",null,(0,i.zw)(a.content),1)])])}var R=t(5124),C={name:"Home",data(){return{content:""}},mounted(){R.Z.getPublicContent().then((e=>{this.content=e.data}),(e=>{this.content=e.response&&e.response.data&&e.response.data.message||e.message||e.toString()}))}};const w=(0,h.Z)(C,[["render",I]]);var L=w;const M=e=>((0,s.dD)("data-v-7e43d1f8"),e=e(),(0,s.Cn)(),e),k={class:"col-md-12 list"},Z={class:"col-8 mx-auto"},q=M((()=>(0,s._)("img",{id:"profile-img",src:"//ssl.gstatic.com/accounts/ui/avatar_2x.png",class:"profile-img-card"},null,-1))),v={class:"form-group"},D=M((()=>(0,s._)("label",{for:"username"},"Логин:",-1))),x={class:"form-group mb-3"},Y=M((()=>(0,s._)("label",{for:"password"},"Пароль:",-1))),F={class:"form-group"},P=["disabled"],j={class:"spinner-border spinner-border-sm"},B=M((()=>(0,s._)("span",null,"Войти",-1))),U={class:"form-group"},H={key:0,class:"alert alert-danger",role:"alert"};function V(e,n,t,a,o,d){const u=(0,s.up)("Field"),c=(0,s.up)("ErrorMessage"),l=(0,s.up)("Form");return(0,s.wg)(),(0,s.iD)("div",k,[(0,s._)("div",Z,[q,(0,s.Wm)(l,{onSubmit:d.handleLogin,"validation-schema":o.schema},{default:(0,s.w5)((()=>[(0,s._)("div",v,[D,(0,s.Wm)(u,{name:"username",type:"text",class:"form-control"}),(0,s.Wm)(c,{name:"username",class:"error-feedback"})]),(0,s._)("div",x,[Y,(0,s.Wm)(u,{name:"password",type:"password",class:"form-control"}),(0,s.Wm)(c,{name:"password",class:"error-feedback"})]),(0,s._)("div",F,[(0,s._)("button",{class:"btn btn-primary btn-block",disabled:o.loading},[(0,s.wy)((0,s._)("span",j,null,512),[[r.F8,o.loading]]),B],8,P)]),(0,s._)("div",U,[o.message?((0,s.wg)(),(0,s.iD)("div",H,(0,i.zw)(o.message),1)):(0,s.kq)("",!0)])])),_:1},8,["onSubmit","validation-schema"])])])}var W=t(5708),J=t(7629),z={name:"Login",components:{Form:W.l0,Field:W.gN,ErrorMessage:W.Bc},data(){const e=J.Ry().shape({username:J.Z_().required("Требуется логин!"),password:J.Z_().required("Требуется пароль!")});return{loading:!1,message:"",schema:e}},computed:{loggedIn(){return this.$store.state.auth.status.loggedIn}},created(){this.loggedIn&&this.$router.push("/profile")},methods:{handleLogin(e){this.loading=!0,this.$store.dispatch("auth/login",e).then((()=>{this.$router.push("/home")}),(e=>{this.loading=!1,this.message=e.response&&e.response.data&&e.response.data.message||e.message||e.toString()}))}}};const G=(0,h.Z)(z,[["render",V],["__scopeId","data-v-7e43d1f8"]]);var K=G;const Q={class:"col-md-12"},X={class:"card card-container"},ee=(0,s._)("img",{id:"profile-img",src:"//ssl.gstatic.com/accounts/ui/avatar_2x.png",class:"profile-img-card"},null,-1),ne={key:0},te={class:"form-group"},re=(0,s._)("label",{for:"username"},"Username",-1),se={class:"form-group"},ae=(0,s._)("label",{for:"email"},"Email",-1),oe={class:"form-group"},de=(0,s._)("label",{for:"password"},"Password",-1),ie={class:"form-group"},ue=["disabled"],ce={class:"spinner-border spinner-border-sm"};function le(e,n,t,a,o,d){const u=(0,s.up)("Field"),c=(0,s.up)("ErrorMessage"),l=(0,s.up)("Form");return(0,s.wg)(),(0,s.iD)("div",Q,[(0,s._)("div",X,[ee,(0,s.Wm)(l,{onSubmit:d.handleRegister,"validation-schema":o.schema},{default:(0,s.w5)((()=>[o.successful?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",ne,[(0,s._)("div",te,[re,(0,s.Wm)(u,{name:"username",type:"text",class:"form-control"}),(0,s.Wm)(c,{name:"username",class:"error-feedback"})]),(0,s._)("div",se,[ae,(0,s.Wm)(u,{name:"email",type:"email",class:"form-control"}),(0,s.Wm)(c,{name:"email",class:"error-feedback"})]),(0,s._)("div",oe,[de,(0,s.Wm)(u,{name:"password",type:"password",class:"form-control"}),(0,s.Wm)(c,{name:"password",class:"error-feedback"})]),(0,s._)("div",ie,[(0,s._)("button",{class:"btn btn-primary btn-block",disabled:o.loading},[(0,s.wy)((0,s._)("span",ce,null,512),[[r.F8,o.loading]]),(0,s.Uk)(" Sign Up ")],8,ue)])]))])),_:1},8,["onSubmit","validation-schema"]),o.message?((0,s.wg)(),(0,s.iD)("div",{key:0,class:(0,i.C_)(["alert",o.successful?"alert-success":"alert-danger"])},(0,i.zw)(o.message),3)):(0,s.kq)("",!0)])])}var pe={name:"Register",components:{Form:W.l0,Field:W.gN,ErrorMessage:W.Bc},data(){const e=J.Ry().shape({username:J.Z_().required("Username is required!").min(3,"Must be at least 3 characters!").max(20,"Must be maximum 20 characters!"),email:J.Z_().required("Email is required!").email("Email is invalid!").max(50,"Must be maximum 50 characters!"),password:J.Z_().required("Password is required!").min(6,"Must be at least 6 characters!").max(40,"Must be maximum 40 characters!")});return{successful:!1,loading:!1,message:"",schema:e}},computed:{loggedIn(){return this.$store.state.auth.status.loggedIn}},mounted(){this.loggedIn&&this.$router.push("/home")},methods:{handleRegister(e){this.message="",this.successful=!1,this.loading=!0,this.$store.dispatch("auth/register",e).then((e=>{this.message=e.message,this.successful=!0,this.loading=!1}),(e=>{this.message=e.response&&e.response.data&&e.response.data.message||e.message||e.toString(),this.successful=!1,this.loading=!1}))}}};const me=(0,h.Z)(pe,[["render",le]]);var _e=me,he=t(1598),ge=t(4161);const fe="http://195.93.252.168:5050/api/Auth/";class Ee{login(e){return ge.Z.post(fe+"login",{username:e.username,password:e.password}).then((e=>(e.data.accessToken&&localStorage.setItem("user",JSON.stringify(e.data)),e.data)))}logout(){localStorage.removeItem("user")}register(e){return ge.Z.post(fe+"register",{username:e.username,password:e.password})}}var be=new Ee;const ye=()=>t.e(7526).then(t.bind(t,7526)),Se=()=>t.e(5925).then(t.bind(t,5925)),Te=()=>Promise.all([t.e(4148),t.e(8383)]).then(t.bind(t,8383)),$e=()=>t.e(7890).then(t.bind(t,7890)),Ae=()=>t.e(1339).then(t.bind(t,1339)),Oe=()=>t.e(1105).then(t.bind(t,1105)),Ne=()=>Promise.all([t.e(4148),t.e(4320)]).then(t.bind(t,4320)),Ie=()=>t.e(8354).then(t.bind(t,8354)),Re=()=>t.e(6044).then(t.bind(t,6044)),Ce=()=>Promise.all([t.e(4148),t.e(7646)]).then(t.bind(t,7646)),we=()=>t.e(7083).then(t.bind(t,7083)),Le=()=>t.e(2096).then(t.bind(t,2096)),Me=()=>Promise.all([t.e(4148),t.e(8845)]).then(t.bind(t,8845)),ke=()=>t.e(2559).then(t.bind(t,2559)),Ze=()=>t.e(5697).then(t.bind(t,5697)),qe=()=>Promise.all([t.e(4148),t.e(8567)]).then(t.bind(t,8567)),ve=()=>t.e(2683).then(t.bind(t,2683)),De=()=>t.e(4195).then(t.bind(t,4195)),xe=()=>Promise.all([t.e(4148),t.e(9398)]).then(t.bind(t,9398)),Ye=()=>t.e(9464).then(t.bind(t,9464)),Fe=()=>t.e(3875).then(t.bind(t,3875)),Pe=()=>Promise.all([t.e(4148),t.e(3385)]).then(t.bind(t,3385)),je=()=>t.e(9208).then(t.bind(t,9208)),Be=()=>t.e(2046).then(t.bind(t,2046)),Ue=()=>t.e(800).then(t.bind(t,800)),He=()=>t.e(2796).then(t.bind(t,2796)),Ve=()=>Promise.all([t.e(4148),t.e(4541)]).then(t.bind(t,4541)),We=()=>t.e(9036).then(t.bind(t,9036)),Je=()=>Promise.all([t.e(4148),t.e(9775)]).then(t.bind(t,9775)),ze=()=>t.e(5518).then(t.bind(t,5518)),Ge=()=>t.e(1689).then(t.bind(t,1689)),Ke=()=>t.e(7273).then(t.bind(t,7273)),Qe=()=>Promise.all([t.e(4148),t.e(4975)]).then(t.bind(t,4975)),Xe=()=>t.e(569).then(t.bind(t,569)),en=()=>t.e(2076).then(t.bind(t,2076)),nn=()=>Promise.all([t.e(4148),t.e(3310)]).then(t.bind(t,3310)),tn=()=>t.e(2281).then(t.bind(t,2281)),rn=()=>Promise.all([t.e(4148),t.e(488)]).then(t.bind(t,488)),sn=()=>t.e(2862).then(t.bind(t,2862)),an=()=>t.e(1642).then(t.bind(t,1642)),on=()=>t.e(6993).then(t.bind(t,6993)),dn=()=>Promise.all([t.e(4148),t.e(2926)]).then(t.bind(t,2926)),un=()=>Promise.all([t.e(4148),t.e(950)]).then(t.bind(t,950)),cn=()=>t.e(5398).then(t.bind(t,5398)),ln=()=>Promise.all([t.e(4148),t.e(953)]).then(t.bind(t,953)),pn=()=>Promise.all([t.e(4148),t.e(6282)]).then(t.bind(t,6282)),mn=()=>Promise.all([t.e(4148),t.e(1803)]).then(t.bind(t,1803)),_n=()=>Promise.all([t.e(4148),t.e(3216)]).then(t.bind(t,3216)),hn=()=>Promise.all([t.e(4148),t.e(2844)]).then(t.bind(t,2844)),gn=()=>Promise.all([t.e(4148),t.e(7372)]).then(t.bind(t,7372)),fn=()=>Promise.all([t.e(4148),t.e(3370)]).then(t.bind(t,3370)),En=()=>Promise.all([t.e(4148),t.e(1375)]).then(t.bind(t,1375)),bn=()=>Promise.all([t.e(4148),t.e(934)]).then(t.bind(t,934)),yn=()=>Promise.all([t.e(4148),t.e(8572)]).then(t.bind(t,8572)),Sn=()=>Promise.all([t.e(4148),t.e(2060)]).then(t.bind(t,2060)),Tn=()=>Promise.all([t.e(4148),t.e(7491)]).then(t.bind(t,7491)),$n=()=>Promise.all([t.e(4148),t.e(6245)]).then(t.bind(t,6245)),An=[{path:"/",name:"home",component:L},{path:"/home",component:L},{path:"/login",component:K},{path:"/register",component:_e},{path:"/profile",name:"profile",component:ye},{path:"/xlparse",name:"xlparse",component:cn},{path:"/ManageExcel",name:"ManageExcel",component:ln},{path:"/ManageExcel2",name:"ManageExcel2",component:pn},{path:"/ManageExcel3",name:"ManageExcel3",component:mn},{path:"/ManageExcel4",name:"ManageExcel4",component:_n},{path:"/ManageExcel5",name:"ManageExcel5",component:hn},{path:"/ManageExcel6",name:"ManageExcel6",component:gn},{path:"/ManageExcel7",name:"ManageExcel7",component:fn},{path:"/ManageExcel8",name:"ManageExcel8",component:En},{path:"/ManageExcel9",name:"ManageExcel9",component:bn},{path:"/ManageExcel10",name:"ManageExcel10",component:yn},{path:"/ManageExcel11",name:"ManageExcel11",component:Sn},{path:"/ManageExcel12",name:"ManageExcel12",component:Tn},{path:"/ManageExcel13",name:"ManageExcel13",component:$n},{path:"/students",component:Te},{path:"/students/:studentId",component:$e},{path:"/rights/:table",component:Oe},{path:"/directions",component:Ne},{path:"/directions/:directionId",component:Re},{path:"/AddDirection",component:Ie},{path:"/profiles",component:Ce},{path:"/profiles/:profileId",component:Le},{path:"/AddProfile",component:we},{path:"/groups",component:Me},{path:"/groups/:groupId",component:Ze},{path:"/AddGroup",component:ke},{path:"/courses",component:nn},{path:"/courses/:courseID",component:tn},{path:"/AddCourse",component:en},{path:"/listeners",component:qe},{path:"/listeners/:listenerId",component:ve},{path:"/AddListener",component:De},{path:"/payers",component:xe},{path:"/payers/:payerId",component:Ye},{path:"/Addpayer",component:Fe},{path:"/contracts",component:Pe},{path:"/contracts/:contractId",component:je},{path:"/AddContract",component:Be},{path:"/ScheduleLoads",component:Ue},{path:"/addcw",component:He},{path:"/courseworks",component:Ve},{path:"/courseworks/:CwId",component:We},{path:"/programs",component:Je},{path:"/programs/:programId",component:Ge},{path:"/AddProgram",component:ze},{path:"/payments",component:Qe},{path:"/payments/:paymentID",component:Xe},{path:"/AddPayment",component:Ke},{path:"/audits",component:rn},{path:"/audits/:scheduleId",component:sn},{path:"/AddAudit",component:an},{path:"/lgroups",component:dn},{path:"/addlgroup",component:on},{path:"/lgroups/:groupId",component:un},{path:"/user",name:"user",component:Se},{path:"/AddStudent",component:Ae},{path:"/AddStudent/:groupName",component:Ae}],On=(0,A.p7)({history:(0,A.r5)(),routes:An});On.beforeEach(((e,n,t)=>{const r=["/login","/register","/home"],s=!r.includes(e.path),a=localStorage.getItem("user");if(s&&!a)t("/login");else if(a){const e=JSON.parse(a).accessToken;try{const n=(0,he.Z)(e),r=Date.now()/1e3;n.exp<r?(be.logout(),t("/login")):t()}catch(o){t()}}else t()}));var Nn=On,In=t(65);const Rn=JSON.parse(localStorage.getItem("user")),Cn=Rn?{status:{loggedIn:!0},user:Rn}:{status:{loggedIn:!1},user:null},wn={namespaced:!0,state:Cn,actions:{login({commit:e},n){return be.login(n).then((n=>(e("loginSuccess",n),Promise.resolve(n))),(n=>(e("loginFailure"),Promise.reject(n))))},logout({commit:e}){be.logout(),e("logout")},register({commit:e},n){return be.register(n).then((n=>(e("registerSuccess"),Promise.resolve(n.data))),(n=>(e("registerFailure"),Promise.reject(n))))},checkTokenExpiration({commit:e,state:n}){const t=n.user?n.user.accessToken:null;if(t)try{const n=(0,he.Z)(t),r=Date.now()/1e3;n.exp<r&&(be.logout(),e("logout"))}catch(r){}}},mutations:{loginSuccess(e,n){e.status.loggedIn=!0,e.user=n},loginFailure(e){e.status.loggedIn=!1,e.user=null},logout(e){e.status.loggedIn=!1,e.user=null},registerSuccess(e){e.status.loggedIn=!1},registerFailure(e){e.status.loggedIn=!1}}},Ln=(0,In.MT)({modules:{auth:wn}});var Mn=Ln,kn=(t(2166),t(3494)),Zn=t(7749),qn=t(8539);kn.vI.add(qn.J9Y,qn.ILF,qn.FKd,qn.$Wj,qn.jLD);var vn=t(6204),Dn=t(4677);t(343);const xn={};(0,r.ri)($).use(Nn).use(Mn).use(Dn.ZP,xn).component("font-awesome-icon",Zn.GN).component("Select2",vn.Z).mount("#app")},5124:function(e,n,t){t.d(n,{Z:function(){return i}});var r=t(4161);function s(){let e=JSON.parse(localStorage.getItem("user"));return e&&e.accessToken?{accept:"*/*","Content-Type":"application/json;charset=UTF-8",Authorization:"Bearer "+e.accessToken}:{}}const a="http://195.93.252.168:5050/api/Query/",o="http://195.93.252.168:5050/api";class d{getPublicContent(){return r.Z.get(a+'"SuperHeroes"',{headers:s()})}getAllStudents(){return r.Z.get(a+"students",{headers:s()})}deleteStudentById(e){const n=`${o}/Students/${e}`;return r.Z.delete(n,{headers:s()})}getAllFormattedStudents(){const e=`${o}/Students`,n=s();return r.Z.get(e,{headers:n}).then((e=>{if(0===e.data.length)return[];console.log(e.data);const n=e.data.map((e=>({student_id:e.studentId,full_name:`${e.lastName} ${e.firstName} ${e.patronymic}`,group_name:`${e.group_number}/${e.subgroup||""}`,group_number:e.group.groupNumber,subgroup:e.subgroup,formatted_enrolled_date:new Date(e.enrolled_date).toLocaleDateString("en-CA"),enrollment_order:e.enrollment_order,formatted_date_of_birth:new Date(e.date_of_birth).toLocaleDateString("en-CA"),course:e.course,group_id:e.group_id})));return console.log(n),{data:n}})).catch((e=>{throw console.error("Error fetching formatted students:",e),e}))}getStudentById(e){const n=`${o}/Students/${e}`,t=s();return r.Z.get(n,{headers:t}).then((e=>{if(!e.data)return null;const n={student_id:e.data.studentId,first_name:e.data.firstName,last_name:e.data.lastName,patronymic:e.data.patronymic,gender:e.data.gender,passport_series_and_number:e.data.passportSeriesAndNumber,INN:e.data.inn,SNILS:e.data.snils,place_of_birth:e.data.placeOfBirth,email:e.data.email,student_login:e.data.studentLogin,enrollment_order:e.data.enrollmentOrder,group_id:e.data.groupId,subgroup:e.data.subgroup,zachetka_number:e.data.zachetkaNumber,phone_number:e.data.phoneNumber,phone_number_rod:e.data.phoneNumberRod,date_of_birth:new Date(e.data.dateOfBirth).toLocaleDateString("en-CA"),enrolled_date:new Date(e.data.enrolledDate).toLocaleDateString("en-CA")};return console.log(n),{data:n}})).catch((e=>{throw console.error("Error fetching student by ID:",e),e}))}updateStudentById(e,n,t,a,d,i,u,c,l,p,m,_,h,g,f,E,b,y,S){const T=`${o}/Students/${e}`,$={studentId:e,firstName:n,lastName:t,patronymic:a,gender:d,dateOfBirth:i,passportSeriesAndNumber:u,INN:c,SNILS:l,placeOfBirth:p,email:m,studentLogin:_,enrollmentOrder:h,enrolledDate:g,groupId:f,subgroup:E,zachetkaNumber:b,phoneNumber:y,phoneNumberRod:S};return r.Z.put(T,$,{headers:s()})}addStudent(e,n,t,a,d,i,u,c,l,p,m,_,h,g,f,E,b,y){const S=`${o}/Students`,T={lastName:e,firstName:n,patronymic:t,gender:a,dateOfBirth:d,passportSeriesAndNumber:i,INN:u,SNILS:c,placeOfBirth:l,email:p,studentLogin:m,enrollmentOrder:_,enrolledDate:h,groupId:g,subgroup:f,zachetkaNumber:y,phoneNumber:E,phoneNumberRod:b};return r.Z.post(S,T,{headers:s()})}getStudentsAsIdText(){const e={query:"SELECT student_id AS id, \n      CONCAT_WS(' ',last_name, first_name,patronymic) AS text\n      FROM \"students\" ORDER BY \n      text ASC;;"};return r.Z.post(a,e,{headers:s()})}getDepartamentsAsIdText(){const e={query:'SELECT dep_id AS id, \n      dep_name AS text\n      FROM "departaments" ORDER BY \n      text ASC;;'};return r.Z.post(a,e,{headers:s()})}getGroupsAsIdText(){const e={query:'SELECT group_id AS id, group_number AS text\n      FROM "groups" ORDER BY \n      text ASC;'};return r.Z.post(a,e,{headers:s()})}getGroupsAsKOSTIL(){const e=`${o}/Group`,n=s();return r.Z.get(e,{headers:n}).then((e=>{if(0===e.data.length)return[];console.log(e.data);const n=e.data.map((e=>({id:e.groupNumber,text:e.groupNumber})));return console.log(n),{data:n}})).catch((e=>{throw console.error("Error fetching formatted groups:",e),e}))}getProgramsAsIdText(){const e={query:'SELECT id, program_name AS text\n      FROM "programs" ORDER BY \n      text ASC;'};return r.Z.post(a,e,{headers:s()})}getPermissionByTable(e){const n={query:`SELECT p.*, r."RoleName"\n      FROM "Permissions" AS p\n      INNER JOIN "Roles" AS r ON p."RoleId" = r."RoleId"\n      WHERE p."TableName" = '${e}';`};return r.Z.post(a,n,{headers:s()})}getAllDirections(){const e={query:"SELECT * from directions ORDER BY \n      dir_name ASC;"};return r.Z.post(a,e,{headers:s()})}getDirectionById(e){const n={query:`SELECT * from directions where \n      dir_id='${e}';`};return r.Z.post(a,n,{headers:s()})}addDirection(e,n){const t={query:`INSERT INTO "directions" (\n        "dir_name",\n        "dir_code"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.Z.post(a,t,{headers:s()})}updateDirectionById(e,n,t){const o={query:`"dir_name" = '${n}',\n      "dir_code" = '${t}'\n  WHERE\n      "dir_id" = '${e}';`};return r.Z.put(a+"directions",o,{headers:s()})}getAllSubjects(){const e={query:"SELECT * from subjects;"};return r.Z.post(a,e,{headers:s()})}getSubjectById(e){const n={query:`SELECT * from subjects where \n      subject_id='${e}';`};return r.Z.post(a,n,{headers:s()})}addSubject(e,n){const t={query:`INSERT INTO "subjects" (\n        "subject_id",\n        "subject_name"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.Z.post(a,t,{headers:s()})}updateSubjectById(e,n){const t={query:`"subject_name" = '${n}',\n  WHERE\n      "subject_id" = '${e}';`};return r.Z.put(a+"subjects",t,{headers:s()})}getAllTeachers(){const e={query:"SELECT * from teachers;"};return r.Z.post(a,e,{headers:s()})}getTeachersForSubject(e){const n={query:`SELECT \n      t.teacher_id, \n      t.first_name, \n      t.last_name, \n      t.patronymic \n    FROM \n      "teachers" t \n    JOIN \n      "employment" e \n    ON \n      t.teacher_id = e.teacher_id \n    WHERE \n      e.subject_id = '${e}';`};return r.Z.post(a,n,{headers:s()})}getSubjectsForTeacher(e){const n={query:`SELECT \n        g.group_number, \n        s.subject_name, \n        t.last_name \n      FROM \n        workload as w \n      JOIN \n        groups as g \n      ON \n        w.group_id = g.group_id \n      JOIN \n        subjects as s \n      ON \n        w.subject_id = s.subject_id \n      JOIN \n        teachers as t \n      ON \n        t.teacher_id = w.teacher_id \n      WHERE \n        w.teacher_id = '${e}';`};return r.Z.post(a,n,{headers:s()})}getTeacherById(e){const n={query:`SELECT * from teachers where \n      teacher_id='${e}';`};return r.Z.post(a,n,{headers:s()})}addTeacher(e,n,t,o){const d={query:`INSERT INTO "teachers" (\n        "teacher_id",\n        "first_name"\n        "last_name"\n        "patronymic"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}'\n    );`};return r.Z.post(a,d,{headers:s()})}updateTeacherById(e,n,t,o){const d={query:`"first_name" = '${n}',\n      "last_name" = '${t}',\n      "patronymic" = '${o}'\n  WHERE\n      "teacher_id" = '${e}';`};return r.Z.put(a+"teachers",d,{headers:s()})}getAllEmployments(){const e={query:'SELECT\n    e.emp_id,\n    e.teacher_id,\n    t.first_name,\n    t.last_name,\n    t.patronymic,\n    e.subject_id,\n    s.subject_name   \n  FROM \n    "employment" e\n  JOIN\n    "teachers" t\n  ON\n    t.teacher_id = e.teacher_id\n  JOIN\n    "subjects" s\n  ON\n    s.subject_id = e.subject_id  \n    ;'};return r.Z.post(a,e,{headers:s()})}getEmploymentById(e){const n={query:`SELECT * from employment where \n    emp_id='${e}';`};return r.Z.post(a,n,{headers:s()})}addEmployment(e,n,t){const o={query:`INSERT INTO "employment" (\n      "emp_id",\n      "teacher_id"\n      "subject_id"\n  ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}'\n  );`};return r.Z.post(a,o,{headers:s()})}updateEmploymentById(e,n,t){const o={query:`"teacher_id" = '${n}',\n    "subject_id" = '${t}'\nWHERE\n    "emp_id" = '${e}';`};return r.Z.put(a+"teachers",o,{headers:s()})}getAllWorkloads(){const e={query:"SELECT * FROM workload"};return r.Z.post(a,e,{headers:s()})}getWorkload(e){const n={query:`SELECT * FROM workload\n    WHERE\n     "group_id" = '${e}'\n    `};return r.Z.post(a,n,{headers:s()})}editWorkload(e,n){const t={query:`UPDATE "workload"\n    SET\n      "teacher_id" = '${n}'\n    WHERE\n      "wl_id" = '${e}'\n    ;`};return r.Z.post(a,t,{headers:s()})}addWorkload(e,n,t){const o={query:`INSERT INTO "workload" (\n      "group_id",\n      "subject_id",\n      "teacher_id"\n  ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}'\n  );`};return r.Z.post(a,o,{headers:s()})}getAllProfiles(){const e={query:'SELECT\n      p.prof_id,\n      p.prof_name,\n      d.dir_id,\n      d.dir_name,\n      d.dir_code\n  FROM\n      "profiles" p\n  JOIN\n      "directions" d ON p.prof_dir_id = d.dir_id\n      ORDER BY \n      p.prof_name ASC;\n  '};return r.Z.post(a,e,{headers:s()})}getProfileById(e){const n={query:`SELECT * from profiles where \n      prof_id='${e}';`};return r.Z.post(a,n,{headers:s()})}addProfile(e,n){const t={query:`INSERT INTO "profiles" (\n        "prof_dir_id",\n        "prof_name"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.Z.post(a,t,{headers:s()})}updateProfileById(e,n,t){const o={query:`"prof_dir_id" = '${n}',\n      "prof_name" = '${t}'\n  WHERE\n      "prof_id" = '${e}';`};return r.Z.put(a+"profiles",o,{headers:s()})}getDirectionsAsIdText(){const e={query:'SELECT dir_id AS id, dir_code AS text\n      FROM "directions" ORDER BY \n      text ASC;'};return r.Z.post(a,e,{headers:s()})}getProfilesAsIdText(){const e={query:'SELECT prof_id AS id, prof_name AS text\n      FROM "profiles" ORDER BY \n      text ASC;'};return r.Z.post(a,e,{headers:s()})}getAllGroups(){const e={query:'SELECT\n      g.group_id,\n      g.group_number,\n      g.course,\n      g.magister,\n      p.prof_name,\n      d.dir_name,\n      d.dir_code\n  FROM\n      "groups" AS g\n  JOIN\n      "profiles" AS p\n  ON\n      g.group_prof_id = p.prof_id\n  JOIN\n      "directions" AS d\n  ON\n      g.group_dir_id = d.dir_id  ORDER BY \n      g.group_number ASC;\n  '};return r.Z.post(a,e,{headers:s()})}getGroupByDir(e){const n={query:`SELECT\n      g.group_id,\n      g.group_number,\n      p.prof_name,\n      d.dir_name,\n      d.dir_code\n  FROM\n      "groups" AS g\n  JOIN\n      "profiles" AS p\n  ON\n      g.group_prof_id = p.prof_id\n  JOIN\n      "directions" AS d\n  ON\n      g.group_dir_id = d.dir_id \n  WHERE\n      g.group_dir_id = '${e}'    \n      ;\n  `};return r.Z.post(a,n,{headers:s()})}getGroupById(e){const n={query:`SELECT * from groups where \n      group_id='${e}';`};return r.Z.post(a,n,{headers:s()})}addGroup(e,n,t,o,d){const i={query:`INSERT INTO "groups" (\n        "group_dir_id",\n        "group_prof_id",\n        "group_number",\n        "course",\n        "magister"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}',\n        '${d}'\n    );`};return r.Z.post(a,i,{headers:s()})}updateGroupById(e,n,t,o,d,i){const u={query:`"group_dir_id" = '${n}',\n      "group_prof_id" = '${t}',\n      "group_number" = '${o}',\n      "course" = '${d}',\n      "magister" = '${i}'\n  WHERE\n      "group_id" = '${e}';`};return r.Z.put(a+"groups",u,{headers:s()})}getAllLgroups(){const e={query:'SELECT\n      *, g.id as lg_id\n  FROM\n      "l_groups" AS g\n      join programs p ON g.group_program_id=p.id;\n  '};return r.Z.post(a,e,{headers:s()})}addLgroup(e,n,t,o,d,i,u){let c=`\n    INSERT INTO "l_groups" (\n      "group_number",\n      "group_program_id",\n      "hours",\n      "start_date",\n      "end_date",\n      "people_count"\n  ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}',\n      '${o}',\n      '${d}',\n      '${i}'\n  );\n  `;u.forEach((e=>{c+=`\n      INSERT INTO "l_groups_day" (\n          "day_id",\n          "starttime",\n          "endtime",\n          "l_groups"\n      ) VALUES (\n          '${e.day_id}',\n          '${e.starttime}',\n          '${e.endtime}',\n          currval('l_groups_id_seq')\n      );\n      `}));const l={query:c};return r.Z.post(a,l,{headers:s()})}updateLgroupById(e,n,t,o,d,i,u,c,l){let p=`UPDATE l_groups SET\n    "group_number" = '${n}',\n      "group_program_id" = '${t}',\n      "hours" = '${o}',\n      "start_date" = '${d}',\n      "end_date" = '${i}',\n      "people_count" = '${u}'\n  WHERE\n      "id" = '${e}';\n    `;l?(p+=`DELETE FROM l_groups_day WHERE l_groups='${e}';`,c.forEach((n=>{p+=`\n        INSERT INTO "l_groups_day" (\n            "day_id",\n            "starttime",\n            "endtime",\n            "l_groups"\n        ) VALUES (\n            '${n.day_id}',\n            '${n.starttime}',\n            '${n.endtime}',\n            '${e}'\n        );\n        `}))):c.forEach((e=>{p+=`\n      UPDATE "l_groups_day" SET\n          "day_id" ='${e.day_id}',\n          "starttime"='${e.starttime}',\n          "endtime"='${e.endtime}'\n    WHERE\n          "l_groups_days_id"='${e.l_groups_days_id}';\n      `}));const m={query:p};return r.Z.post(a,m,{headers:s()})}getLgroupById(e){const n={query:`SELECT *,TO_CHAR(end_date, 'YYYY-MM-DD') AS end_date,TO_CHAR(start_date, 'YYYY-MM-DD') AS start_date from l_groups where \n      id='${e}';`};return r.Z.post(a,n,{headers:s()})}getGDaysById(e){const n={query:`SELECT * from \n      l_groups_day where l_groups='${e}'; `};return r.Z.post(a,n,{headers:s()})}getAllListeners(){const e={query:"SELECT\n      *,\n      CONCAT(l.lastname, ' ', l.name, ' ', l.surname) AS full_name,\n      l.phone_number,\n      l.email,\n      l.id as list_id\n     \n  FROM\n      \"listeners\" as l\n      LEFT JOIN l_groups as lg ON l.group_id=lg.id;\n\n      ;\n  "};return r.Z.post(a,e,{headers:s()})}getAllListenersWithoutGroup(){const e={query:"SELECT\n      *,\n      CONCAT(l.lastname, ' ', l.name, ' ', l.surname) AS full_name, TO_CHAR(start_date , 'DD/MM/YYYY') AS start_date, TO_CHAR(end_date , 'DD/MM/YYYY') AS end_date,\n      l.phone_number,\n      l.email,\n      l.id as list_id\n     \n  FROM\n      \"listeners\" as l\n      JOIN listener_wishes as lw ON l.id=lw.listener_id\n      WHERE l.group_id IS NULL;\n\n      ;\n  "};return r.Z.post(a,e,{headers:s()})}getListenerById(e){const n={query:`SELECT *, TO_CHAR(issue_date , 'YYYY-MM-DD') AS issue_date,TO_CHAR(start_date , 'YYYY-MM-DD') AS start_date,TO_CHAR(end_date, 'YYYY-MM-DD') AS end_date from \n      listeners join listener_wishes on listeners.id=listener_wishes.listener_id where \n      id='${e}'; `};return r.Z.post(a,n,{headers:s()})}getWishDaysById(e){const n={query:`SELECT * from \n      l_wish_days where listener_id='${e}'; `};return r.Z.post(a,n,{headers:s()})}addListener(e,n,t,o,d,i,u,c,l,p,m,_,h,g,f,E,b,y,S){let T=`\n    INSERT INTO "listeners" (\n      "name",\n      "surname",\n      "lastname",\n      group_id,\n      "snils",\n      "passport",\n      "issued_by",\n      "issue_date",\n      "department_code",\n      "registration_address",\n      "phone_number",\n      "email"\n    ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}',\n      ${o},\n      '${d}',\n      '${i}',\n      '${u}',\n      '${c}',\n      '${l}',\n      '${p}',\n      '${m}',\n      '${_}'\n    ) RETURNING id;\n\n    INSERT INTO "listener_wishes" (\n      "people_count",\n      "hours",\n      start_date,\n      "end_date",\n      "listener_id",\n      "wish_description"\n    ) VALUES (\n      '${h}',\n      '${g}',\n      '${f}',\n      '${E}',\n      currval('listeners_id_seq'),\n      '${y}'\n    );\n  `;console.log(S),S.forEach((e=>{T+=`\n    INSERT INTO "l_wish_days" (\n        "day_id",\n        "starttime",\n        "endtime",\n        "listener_id"\n    ) VALUES (\n        '${e.day_id}',\n        '${e.starttime}',\n        '${e.endtime}',\n        currval('listeners_id_seq')\n    );\n    `}));const $={query:T};return r.Z.post(a,$,{headers:s()})}addListenerWishes(e,n,t,o,d,i,u){const c={query:`INSERT INTO "listener_wishes" (\n        "people_count",\n        "hours",\n        "lastname",\n        start_date,\n        "end_date",\n        "listener_id",\n        "wish_description",\n        "suitable_days"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}',\n        '${d}',\n        '${i}',\n        ARRAY['${u}']\n    );`};return r.Z.post(a,c,{headers:s()})}updateListenerById(e,n,t,o,d,i,u,c,l,p,m,_,h,g,f,E,b,y,S,T){let $=`UPDATE listeners SET\n "name" ='${n}',\n"surname" ='${t}',\n"lastname"=  '${o}',\n"group_id"=  ${d},\n"snils"= '${i}',\n"passport"= '${u}',\n"issued_by"= '${c}',\n"issue_date"='${l}',\n"department_code"='${p}',\n"registration_address"='${m}',\n"phone_number"='${_}',\n"email"='${h}'\nWHERE\n"id" = '${e}';\n\nUPDATE listener_wishes SET\n "people_count" ='${g}',\n"hours" ='${f}',\n"start_date"=  '${E}',\n"end_date"=  '${b}',\n"wish_description"= '${y}'\nWHERE\n"listener_id" = '${e}';\n\n\n`;T?($+=`DELETE FROM l_wish_days WHERE listener_id='${e}';`,S.forEach((n=>{$+=`\n    INSERT INTO "l_wish_days" (\n        "day_id",\n        "starttime",\n        "endtime",\n        "listener_id"\n    ) VALUES (\n        '${n.day_id}',\n        '${n.starttime}',\n        '${n.endtime}',\n        '${e}'\n    );\n    `}))):S.forEach((e=>{$+=`\n  UPDATE "l_wish_days" SET\n      "day_id" ='${e.day_id}',\n      "starttime"='${e.starttime}',\n      "endtime"='${e.endtime}'\nWHERE\n      "l_wish_day_id"='${e.l_wish_day_id}';\n  `}));const A={query:$};return r.Z.post(a,A,{headers:s()})}getAllContracts(){const e={query:"SELECT \n      *,\n      contracts.id AS contract_id,\n      listeners.id AS listener_id,\n      CONCAT(listeners.lastname, ' ', listeners.name, ' ', listeners.surname) AS listener_full_name,\n      listeners.snils AS listener_snils,\n      listeners.passport AS listener_passport,\n      listeners.issued_by AS listener_issued_by,\n      listeners.issue_date AS listener_issue_date,\n      listeners.department_code AS listener_department_code,\n      listeners.registration_address AS listener_registration_address,\n      listeners.phone_number AS listener_phone_number,\n      listeners.email AS listener_email,\n      payers.id AS payer_id,\n      CONCAT(payers.lastname, ' ', payers.name, ' ', payers.surname) AS payer_full_name,\n      payers.snils AS payer_snils,\n      payers.passport AS payer_passport,\n      payers.issued_by AS payer_issued_by,\n      payers.issue_date AS payer_issue_date,\n      payers.department_code AS payer_department_code,\n      payers.registration_address AS payer_registration_address,\n      payers.phone_number AS payer_phone_number,\n      payers.email AS payer_email,\n      programs.program_name,\n      contracts.contr_number,\n      contracts.id,TO_CHAR(listeners.issue_date, 'DD/MM/YYYY') AS listener_issue_date,\n      TO_CHAR(start_date, 'DD/MM/YYYY') AS start_date,\n      TO_CHAR(end_date, 'DD/MM/YYYY') AS end_date,\n      TO_CHAR(date_enroll, 'DD/MM/YYYY') AS date_enroll,\n      TO_CHAR(date_kick, 'DD/MM/YYYY') AS date_kick\n  FROM \n      contracts\n  JOIN\n      listeners ON contracts.listener_id = listeners.id\n  JOIN\n      payers ON contracts.payer_id = payers.id\n  JOIN\n      programs ON contracts.program_id = programs.id;\n  "};return r.Z.post(a,e,{headers:s()})}getContractById(e){const n={query:`SELECT * from contracts where \n      id='${e}';`};return r.Z.post(a,n,{headers:s()})}addContract(e,n,t,o,d,i,u,c,l){const p={query:`INSERT INTO contracts (listener_id, payer_id, contr_number, program_id,cert_date, listened_hours, date_enroll, date_kick,group_to_move)\n      VALUES(\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}',\n        '${d}',\n        '${i}',\n        '${u}',\n        ${void 0!==c?`'${c}'`:null},\n        ${l}\n    );`};return r.Z.post(a,p,{headers:s()})}updateContractById(e,n,t,o,d){const i={query:` "listener_id" ='${n}',\n      "payer_id" ='${t}',\n      "contr_number"= '${o}',\n      "program_id"= '${d}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(a+"contracts",i,{headers:s()})}getPayersAsIdText(){const e={query:"SELECT id AS id, CONCAT(lastname, ' ', name, ' ', surname) AS text\n      FROM \"payers\" ORDER BY \n      text ASC;"};return r.Z.post(a,e,{headers:s()})}getLgroupsAsIdText(){const e={query:'SELECT id AS id, group_number AS text\n      FROM "l_groups" ORDER BY \n      text ASC;'};return r.Z.post(a,e,{headers:s()})}getListenersAsIdText(){const e={query:"SELECT id AS id, CONCAT(lastname, ' ', name, ' ', surname) AS text\n      FROM \"listeners\" ORDER BY \n      text ASC;"};return r.Z.post(a,e,{headers:s()})}getAllCws(){const e={query:"SELECT\n      cw.course_work_id,\n      cw.course_work_teacher_id,\n      cw.course_work_theme,\n      cw.course_work_student_id,\n      cw.course_work_kafedra,\n      CONCAT(s.last_name, ' ', s.first_name, ' ', s.patronymic) AS full_name,\n      s.gender AS student_gender,\n      s.date_of_birth AS student_date_of_birth,\n      s.passport_series_and_number AS student_passport,\n      s.\"INN\" AS student_INN,\n      s.\"SNILS\" AS student_SNILS,\n      s.place_of_birth AS student_place_of_birth,\n      s.email AS student_email,\n      s.student_login AS student_login,\n      s.enrollment_order AS student_enrollment_order,\n      s.enrolled_date AS student_enrolled_date,\n      s.course AS student_course,\n      s.group_id AS student_group_id,\n      s.subgroup AS student_subgroup,\n      d.dep_name,\n      CONCAT(t.last_name, ' ', t.first_name, ' ', t.patronymic) AS full_name_t\n  FROM\n      course_work cw\n  JOIN\n      students s ON cw.course_work_student_id = s.student_id\n  JOIN\n      departaments d ON cw.course_work_kafedra=d.dep_id\n  JOIN\n      teachers t ON cw.course_work_teacher_id=t.teacher_id;\n  \n  "};return r.Z.post(a,e,{headers:s()})}getCwById(e){const n={query:`SELECT * from course_work where \n      course_work_id='${e}';`};return r.Z.post(a,n,{headers:s()})}addCw(e,n,t,o,d,i,u){const c={query:`INSERT INTO course_work (course_work_theme, course_work_teacher_id, course_work_student_id, course_work_kafedra,course_work_vipysk,course_work_year,course_work_ocenka)\n      VALUES(\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}',\n        '${d}',\n        '${i}',\n        '${u}'\n    );`};return r.Z.post(a,c,{headers:s()})}updateCwById(e,n,t,o,d,i,u,c){const l={query:` "course_work_theme" ='${n}',\n      "course_work_teacher_id" ='${t}',\n      "course_work_student_id"= '${o}',\n      "course_work_kafedra"= '${d}',\n      "course_work_vipysk" ='${i}',\n      "course_work_year" ='${u}',\n      "course_work_ocenka" ='${c}'\n  WHERE\n      "course_work_id" = '${e}';`};return r.Z.put(a+"course_work",l,{headers:s()})}getAllPayers(){const e={query:"SELECT\n      CONCAT(lastname, ' ', name, ' ', surname) AS full_name,\n      phone_number,\n      email,\n      id\n  FROM\n      payers;\n  "};return r.Z.post(a,e,{headers:s()})}getPayerById(e){const n={query:`SELECT *, TO_CHAR(issue_date , 'YYYY-MM-DD') AS issue_date from payers where \n      id='${e}';`};return r.Z.post(a,n,{headers:s()})}addPayer(e,n,t,o,d,i,u,c,l,p,m){const _={query:`INSERT INTO "payers" (\n        "name",\n        "surname",\n        "lastname",\n        "snils",\n        "passport",\n        "issued_by",\n        "issue_date",\n        "department_code",\n        "registration_address",\n        "phone_number",\n        "email"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}',\n        '${d}',\n        '${i}',\n        '${u}',\n        '${c}',\n        '${l}',\n        '${p}',\n        '${m}'\n    );`};return r.Z.post(a,_,{headers:s()})}updatePayerById(e,n,t,o,d,i,u,c,l,p,m,_){const h={query:` "name" ='${n}',\n      "surname" ='${t}',\n      "lastname"=  '${o}',\n      "snils"= '${d}',\n      "passport"= '${i}',\n      "issued_by"= '${u}',\n      "issue_date"='${c}',\n      "department_code"='${l}',\n      "registration_address"='${p}',\n      "phone_number"='${m}',\n      "email"='${_}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(a+"payers",h,{headers:s()})}getAllCourses(){const e={query:'SELECT\n      c.course_id,\n      c.course,\n      c.group_id,\n      g.group_number\n  FROM\n      "courses" c\n  JOIN\n      "groups" g ON c.group_id = g.group_id\n      ORDER BY \n      c.course ASC;\n  '};return r.Z.post(a,e,{headers:s()})}getCourseById(e){const n={query:`SELECT * from courses where \n      course_id='${e}';`};return r.Z.post(a,n,{headers:s()})}addCourse(e,n){const t={query:`INSERT INTO "courses" (\n        "course",\n        "group_id"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.Z.post(a,t,{headers:s()})}updateCourseById(e,n,t){const o={query:`"course" = '${n}',\n      "group_id" = '${t}'\n  WHERE\n      "course_id" = '${e}';`};return r.Z.put(a+"courses",o,{headers:s()})}getAllPrograms(){const e={query:"SELECT\n      id,\n      required_amount,\n      program_name,\n      hours,\n      TO_CHAR(start_date , 'YYYY-MM-DD') AS start_date,\n      TO_CHAR(end_date , 'YYYY-MM-DD') AS end_date\n  FROM\n    programs;\n  "};return r.Z.post(a,e,{headers:s()})}getProgramById(e){const n={query:`SELECT *, TO_CHAR(start_date , 'YYYY-MM-DD') AS start_date, TO_CHAR(end_date , 'YYYY-MM-DD') AS end_date from programs where \n      id='${e}';`};return r.Z.post(a,n,{headers:s()})}addProgram(e,n,t,o,d){const i={query:`INSERT INTO "programs" (\n        "required_amount",\n        "program_name",\n        "hours",\n        "start_date",\n        "end_date"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}',\n        '${d}'\n    );`};return r.Z.post(a,i,{headers:s()})}getPaymentById(e){const n={query:`SELECT *, TO_CHAR(date_40 , 'YYYY-MM-DD') AS date_40, TO_CHAR(expiration_date , 'YYYY-MM-DD') AS expiration_date from pay_graph where \n      id='${e}';`};return r.Z.post(a,n,{headers:s()})}updateProgramById(e,n,t,o,d,i){const u={query:`"required_amount" ='${n}',\n      "program_name" ='${t}',\n      "hours"=  '${o}',\n      "start_date"= '${d}',\n      "end_date"= '${i}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(a+"programs",u,{headers:s()})}getAllPayments(){const e={query:"SELECT\n      *, TO_CHAR(expiration_date, 'DD/MM/YYYY') AS expiration_date, TO_CHAR(date_40, 'DD/MM/YYYY') AS date_40 from pay_graph p\n      JOIN contracts c ON p.contract_id=c.id;\n  "};return r.Z.post(a,e,{headers:s()})}getAuditAsIdText(){const e={query:'SELECT aud_id AS id, number AS text\n      FROM "auditorium";'};return r.Z.post(a,e,{headers:s()})}getSubjectAsIdText(){const e={query:'SELECT subject_id AS id, subject_name AS text\n      FROM "subjects";'};return r.Z.post(a,e,{headers:s()})}getContractsAsIdText(){const e={query:'SELECT id AS id, contr_number AS text\n      FROM "contracts";'};return r.Z.post(a,e,{headers:s()})}getTeachersAsIdText(){const e={query:"SELECT teacher_id AS id, \n      CONCAT_WS(' ',last_name, first_name,patronymic) AS text\n      FROM \"teachers\" ORDER BY \n      text ASC;;"};return r.Z.post(a,e,{headers:s()})}updatePaymentById(e,n,t,o,d,i,u,c){const l={query:`"contract_id" ='${n}',\n      "expiration_date" ='${t}',\n      "date_40"=  '${o}',\n      "all_sum"= '${d}',\n      "deposited_amount"= '${i}',\n      "left_to_pay"= '${u}',\n      "bank"= '${c}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(a+"pay_graph",l,{headers:s()})}addPayment(e,n,t,o,d,i,u){const c={query:`INSERT INTO "pay_graph" (\n        "contract_id",\n        "expiration_date",\n        "date_40",\n        "all_sum",\n        "deposited_amount",\n        "left_to_pay",\n        "bank"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}',\n        '${d}',\n        '${i}',\n        '${u}'\n    );`};return r.Z.post(a,c,{headers:s()})}getPaymentsAsIdText(){const e={query:'SELECT id, contr_number AS text\n      FROM "contracts" ORDER BY \n      text ASC;'};return r.Z.post(a,e,{headers:s()})}getDaysAsIdText(){const e={query:'SELECT day_id AS id, dayofweek AS text\n      FROM "days";'};return r.Z.post(a,e,{headers:s()})}savesSchedule(e,n,t,o){const d={query:`INSERT INTO "schedule" (\n          "aud_id",\n          "day_id",\n          "subject_id",\n          "teacher_id"\n      ) VALUES (\n          '${e}',\n          '${n}',\n          '${t}',\n          '${o}'\n      );`};return r.Z.post(a,d,{headers:s()})}getAllAudit(){const e={query:"SELECT\n       c.schedule_id,\n       a.number,\n       a.type,\n       a.count,\n       s.subject_name,\n       d.dayofweek,\n       CONCAT_WS(' ', t.last_name, t.first_name, t.patronymic) AS full_name\n       \n    FROM\n      schedule c\n      join\n      auditorium a on c.aud_id=a.aud_id\n      join\n      subjects s on c.subject_id=s.subject_id\n      join\n      days d on c.day_id=d.day_id\n      join \n      teachers t on c.teacher_id=t.teacher_id;\n    "};return r.Z.post(a,e,{headers:s()})}getAuditById(e){const n={query:`SELECT * from schedule where \n        schedule_id='${e}';`};return r.Z.post(a,n,{headers:s()})}updateScheduleById(e,n,t,o,d){const i={query:`"day_id = '${n}',\n        subject_id = '${t}',\n        teacher_id = '${o}',\n        aud_id = '${d}'\n    WHERE\n        "schedule_id" = '${e}';`};return r.Z.put(a+"schedule",i,{headers:s()})}deleteScheduleById(e){const n={query:`DELETE FROM schedule where "schedule_id" = '${e}'`};return r.Z.post(a,n,{headers:s()})}clearTempTeachGruz(){const e={query:'TRUNCATE "temp_teach_gruz" RESTART IDENTITY;'};return r.Z.post(a,e,{headers:s()})}clearTempSostav(){const e={query:'TRUNCATE "temp_sostav" RESTART IDENTITY;'};return r.Z.post(a,e,{headers:s()})}clearTempFac(){const e={query:'TRUNCATE "temp_fac_names" RESTART IDENTITY;'};return r.Z.post(a,e,{headers:s()})}clearTempItogVO(){const e={query:'TRUNCATE "temp_itogVO" RESTART IDENTITY;'};return r.Z.post(a,e,{headers:s()})}clearTempDep(){const e={query:'TRUNCATE "temp_departaments" RESTART IDENTITY;'};return r.Z.post(a,e,{headers:s()})}clearForShedLec(){const e={query:'TRUNCATE "for_sched_lec" RESTART IDENTITY;'};return r.Z.post(a,e,{headers:s()})}clearForShedPrac(){const e={query:'TRUNCATE "for_sched_prac" RESTART IDENTITY;'};return r.Z.post(a,e,{headers:s()})}insertTempSostav(e){const n={query:`INSERT INTO "temp_sostav" (\n        "name1",\n        "name2",\n        "name3",\n        "fac",\n        "dep",\n        "dolj",\n        "deg",\n        "status") \n        VALUES \n        ${e}\n    ;`};return r.Z.post(a,n,{headers:s()})}insertTempTeachNagr(e){const n={query:`INSERT INTO "temp_teach_gruz" (\n        "fam",\n        "fac",\n        "dep",\n        "dis_name",\n        "code_napr",\n        "kurs",\n        "semestr",\n        "kont_budg",\n        "kont_dog",\n        "number_of_streams",\n        "number_of_groups",\n        "number_of_subgroups",\n        "lec_h",\n        "seminar_h",\n        "lab_h",\n        "consult_h",\n        "exam_h",\n        "zachet_h",\n        "kursach_h",\n        "control_h",\n        "VKR_h",\n        "magistr_h",\n        "GEK_h",\n        "practice_h",\n        "manage_h",\n        "other_h")\n      VALUES\n        ${e}\n    ;`};return r.Z.post(a,n,{headers:s()})}insertTempFac(e){const n={query:`INSERT INTO "temp_fac_names" (\n        "full_name",\n        "short_name") \n        VALUES\n        ${e}\n    ;`};return r.Z.post(a,n,{headers:s()})}insertTempDep(e){const n={query:`INSERT INTO "temp_departaments" (\n        "dep_name",\n        "dep_abb") \n        VALUES\n        ${e}\n    ;`};return r.Z.post(a,n,{headers:s()})}insertTempItogVO(e){const n={query:`INSERT INTO "temp_itogVO" (\n        "fac",\n        "dep",\n        "years",\n        "lek_budj",\n        "lek_dogovor",\n        "p_budg",\n        "p_dogovor" ,\n        "lab_budj",\n        "lab_dogovor",\n        "cons_ex",\n        "cons_zfo",\n        "control_work",\n        "zachet_h",\n        "ex_speak",\n        "ex_wr",\n        "practice",\n        "manageVKR",\n        "recVKR",\n        "normContVKR",\n        "checkPlagVKR",\n        "GOSexam",\n        "defVKR",\n        "manag")\n        VALUES\n        ${e}\n    ;`};return r.Z.post(a,n,{headers:s()})}insertTempPractice(e){const n={query:`INSERT INTO "temp_practice" (\n        "fac",\n        "dep",\n        "years",\n        "napr",\n        "profile",\n        "practice_name",\n        "srok",\n        "kurs",\n        "semestr",\n        "number_of_weeks",\n        "number_of_work_days",\n        "students_budg",\n        "students_dog",\n        "number_of_groups",\n        "number_of_subgroups",\n        "budg_h",\n        "dog_h")\n        VALUES\n        ${e}\n    ;`};return r.Z.post(a,n,{headers:s()})}insertForShedLec(e){const n={query:`INSERT INTO "for_sched_lec" (\n        "fac",\n        "dep",\n        "napr",\n        "kurs",\n        "disc",\n        "number_of_streams",\n        "number_of_groups",\n        "number_of_subgroups",\n        "lec_h",\n        "fio")\n        VALUES\n        ${e}\n    ;`};return r.Z.post(a,n,{headers:s()})}insertForShedPrac(e){const n={query:`INSERT INTO "for_sched_prac" (\n        "fac",\n        "dep",\n        "napr",\n        "kurs",\n        "disc",\n        "number_of_subgroups",\n        "fio",\n        "display_audit")\n        VALUES\n        ${e}\n    ;`};return r.Z.post(a,n,{headers:s()})}getTempTeachGruzCount(){const e={query:'SELECT COUNT(*) FROM "temp_teach_gruz";'};return r.Z.post(a,e,{headers:s()})}getTempSostavCount(){const e={query:'SELECT COUNT(*) FROM "temp_sostav";'};return r.Z.post(a,e,{headers:s()})}getTempFacCount(){const e={query:'SELECT COUNT(*) FROM "temp_fac_names";'};return r.Z.post(a,e,{headers:s()})}getTempDepCount(){const e={query:'SELECT COUNT(*) FROM "temp_departaments";'};return r.Z.post(a,e,{headers:s()})}getTempItogVOcount(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.Z.post(a,e,{headers:s()})}"getTempRasprСount"(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.Z.post(a,e,{headers:s()})}getTempOFOVOcount(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.Z.post(a,e,{headers:s()})}getForShedLecOcount(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.Z.post(a,e,{headers:s()})}getForShedPraccount(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.Z.post(a,e,{headers:s()})}getTempKurscount(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.Z.post(a,e,{headers:s()})}getTempPlanSvodcount(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.Z.post(a,e,{headers:s()})}getTempKompetcount(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.Z.post(a,e,{headers:s()})}getTempGruzKurscount(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.Z.post(a,e,{headers:s()})}getTempSostav(){const e={query:'SELECT * FROM "temp_sostav" INNER JOIN "temp_fac_names" ON (temp_sostav.fac = temp_fac_names.full_name);'};return r.Z.post(a,e,{headers:s()})}getTempTeachGruz(){const e={query:'SELECT * FROM "temp_teach_gruz" INNER JOIN "temp_fac_names" ON (temp_teach_gruz.fac = temp_fac_names.full_name);'};return r.Z.post(a,e,{headers:s()})}getTempFac(){const e={query:'SELECT * FROM "temp_fac_names";'};return r.Z.post(a,e,{headers:s()})}getTempDep(){const e={query:'SELECT * FROM "temp_departaments";'};return r.Z.post(a,e,{headers:s()})}getTempVO(){const e={query:'SELECT * FROM "temp_itogVO" ;'};return r.Z.post(a,e,{headers:s()})}getTempRaspr(){const e={query:'SELECT * FROM "temp_distrib_KIT";'};return r.Z.post(a,e,{headers:s()})}getTempOFO(){const e={query:'SELECT * FROM "temp_OFO_VO";'};return r.Z.post(a,e,{headers:s()})}getForShedLec(){const e={query:'SELECT * FROM "for_sched_lec" INNER JOIN "temp_fac_names" ON (for_sched_lec.fac = temp_fac_names.full_name);'};return r.Z.post(a,e,{headers:s()})}getForShedPrac(){const e={query:'SELECT * FROM "for_sched_prac" INNER JOIN "temp_fac_names" ON (for_sched_prac.fac = temp_fac_names.full_name);'};return r.Z.post(a,e,{headers:s()})}getKurs(){const e={query:'SELECT * FROM "temp_distrib_KIT";'};return r.Z.post(a,e,{headers:s()})}updateTempNagrFam(e,n){const t={query:`UPDATE "temp_teach_gruz"\n      SET "fam" = '${n}'\n      WHERE "id" = '${e}';`};return r.Z.post(a,t,{headers:s()})}saveTeachers(e){const n={query:`INSERT INTO "teachers" (\n        "first_name",\n        "last_name",\n        "patronymic"\n        ) \n        VALUES\n        ${e}\n    ;`};return r.Z.post(a,n,{headers:s()})}}var i=new d}},n={};function t(r){var s=n[r];if(void 0!==s)return s.exports;var a=n[r]={exports:{}};return e[r].call(a.exports,a,a.exports,t),a.exports}t.m=e,function(){var e=[];t.O=function(n,r,s,a){if(!r){var o=1/0;for(c=0;c<e.length;c++){r=e[c][0],s=e[c][1],a=e[c][2];for(var d=!0,i=0;i<r.length;i++)(!1&a||o>=a)&&Object.keys(t.O).every((function(e){return t.O[e](r[i])}))?r.splice(i--,1):(d=!1,a<o&&(o=a));if(d){e.splice(c--,1);var u=s();void 0!==u&&(n=u)}}return n}a=a||0;for(var c=e.length;c>0&&e[c-1][2]>a;c--)e[c]=e[c-1];e[c]=[r,s,a]}}(),function(){t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,{a:n}),n}}(),function(){t.d=function(e,n){for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}}(),function(){t.f={},t.e=function(e){return Promise.all(Object.keys(t.f).reduce((function(n,r){return t.f[r](e,n),n}),[]))}}(),function(){t.u=function(e){return"js/"+e+"."+{488:"18410f75",569:"ee7b8ad1",800:"5da701c0",934:"0210231c",950:"f8d95909",953:"121c3340",1105:"4499e7fb",1339:"4d9365b2",1375:"c6e2bfd0",1642:"cb6a8d3d",1689:"c9a6ec95",1803:"3953ced3",2046:"fc782662",2060:"e3c40f47",2076:"c44dbf8b",2096:"d64bfb8f",2281:"013a137c",2559:"0547771f",2683:"09c5c8ff",2796:"ba19621b",2844:"d0755b73",2862:"6e269098",2926:"ea50a0b3",3216:"3a73576f",3310:"1c21f99f",3370:"4735e12c",3385:"724f801b",3875:"17e7dd63",4148:"d49ae2b3",4195:"e3e25cf5",4320:"e643a439",4541:"16ce5ed2",4975:"95678fca",5398:"1f20322c",5518:"6927e68a",5697:"86b22389",5925:"3da5cb51",6044:"258bc565",6245:"567fefae",6282:"06b51787",6993:"140686da",7083:"5f5af686",7273:"b6f51121",7372:"c8784615",7491:"78b20b61",7526:"3559fe1b",7646:"ba570809",7890:"731d19d2",8354:"e00e6ba9",8383:"0b40d8be",8567:"efc74fc6",8572:"24fb849e",8845:"3e1c5dc6",9036:"0bfa8988",9208:"3170ad1f",9398:"3f53ee39",9464:"e9d09b3d",9775:"da4f1777"}[e]+".js"}}(),function(){t.miniCssF=function(e){return"css/"+e+"."+{488:"b5080a42",569:"d4fbd7e1",800:"6eb8d0ad",934:"f4154c99",950:"98cafc16",953:"d8572aa7",1105:"523d2a97",1339:"587ba431",1375:"024bf397",1642:"97ba118a",1689:"1e4f1b76",1803:"854eefc9",2046:"aa7fb0bd",2060:"13f1c12d",2076:"b2275eb6",2096:"490afdc7",2281:"57951295",2559:"86bfcd4d",2683:"8de0ab4e",2796:"67260d5d",2844:"f71771d9",2862:"ce7e43f1",2926:"bd148acb",3216:"a9db3bf5",3310:"112d5f44",3370:"2867e0cb",3385:"6a9a8e5c",3875:"f068631d",4148:"91e589cf",4195:"1a1920cd",4320:"96bec71b",4541:"ff7c3c59",4975:"178d2831",5518:"5a308c9a",5697:"b2660b38",6044:"af5a7bb3",6245:"49f14941",6282:"2cd52d18",6993:"e5e9f4ca",7083:"33604b5d",7273:"a196333d",7372:"91dd1e2f",7491:"811c0f77",7646:"e87443c8",7890:"71c9b4a0",8354:"60c9000c",8383:"e80abad1",8567:"453d65f0",8572:"cbf37319",8845:"917e1929",9036:"d0be88d8",9208:"9b275057",9398:"aa36eb4d",9464:"828f8b12",9775:"988b52a1"}[e]+".css"}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)}}(),function(){var e={},n="vue-3-authentication-jwt:";t.l=function(r,s,a,o){if(e[r])e[r].push(s);else{var d,i;if(void 0!==a)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var l=u[c];if(l.getAttribute("src")==r||l.getAttribute("data-webpack")==n+a){d=l;break}}d||(i=!0,d=document.createElement("script"),d.charset="utf-8",d.timeout=120,t.nc&&d.setAttribute("nonce",t.nc),d.setAttribute("data-webpack",n+a),d.src=r),e[r]=[s];var p=function(n,t){d.onerror=d.onload=null,clearTimeout(m);var s=e[r];if(delete e[r],d.parentNode&&d.parentNode.removeChild(d),s&&s.forEach((function(e){return e(t)})),n)return n(t)},m=setTimeout(p.bind(null,void 0,{type:"timeout",target:d}),12e4);d.onerror=p.bind(null,d.onerror),d.onload=p.bind(null,d.onload),i&&document.head.appendChild(d)}}}(),function(){t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){t.p="/"}(),function(){if("undefined"!==typeof document){var e=function(e,n,t,r,s){var a=document.createElement("link");a.rel="stylesheet",a.type="text/css";var o=function(t){if(a.onerror=a.onload=null,"load"===t.type)r();else{var o=t&&("load"===t.type?"missing":t.type),d=t&&t.target&&t.target.href||n,i=new Error("Loading CSS chunk "+e+" failed.\n("+d+")");i.code="CSS_CHUNK_LOAD_FAILED",i.type=o,i.request=d,a.parentNode&&a.parentNode.removeChild(a),s(i)}};return a.onerror=a.onload=o,a.href=n,t?t.parentNode.insertBefore(a,t.nextSibling):document.head.appendChild(a),a},n=function(e,n){for(var t=document.getElementsByTagName("link"),r=0;r<t.length;r++){var s=t[r],a=s.getAttribute("data-href")||s.getAttribute("href");if("stylesheet"===s.rel&&(a===e||a===n))return s}var o=document.getElementsByTagName("style");for(r=0;r<o.length;r++){s=o[r],a=s.getAttribute("data-href");if(a===e||a===n)return s}},r=function(r){return new Promise((function(s,a){var o=t.miniCssF(r),d=t.p+o;if(n(o,d))return s();e(r,d,null,s,a)}))},s={2143:0};t.f.miniCss=function(e,n){var t={488:1,569:1,800:1,934:1,950:1,953:1,1105:1,1339:1,1375:1,1642:1,1689:1,1803:1,2046:1,2060:1,2076:1,2096:1,2281:1,2559:1,2683:1,2796:1,2844:1,2862:1,2926:1,3216:1,3310:1,3370:1,3385:1,3875:1,4148:1,4195:1,4320:1,4541:1,4975:1,5518:1,5697:1,6044:1,6245:1,6282:1,6993:1,7083:1,7273:1,7372:1,7491:1,7646:1,7890:1,8354:1,8383:1,8567:1,8572:1,8845:1,9036:1,9208:1,9398:1,9464:1,9775:1};s[e]?n.push(s[e]):0!==s[e]&&t[e]&&n.push(s[e]=r(e).then((function(){s[e]=0}),(function(n){throw delete s[e],n})))}}}(),function(){var e={2143:0};t.f.j=function(n,r){var s=t.o(e,n)?e[n]:void 0;if(0!==s)if(s)r.push(s[2]);else{var a=new Promise((function(t,r){s=e[n]=[t,r]}));r.push(s[2]=a);var o=t.p+t.u(n),d=new Error,i=function(r){if(t.o(e,n)&&(s=e[n],0!==s&&(e[n]=void 0),s)){var a=r&&("load"===r.type?"missing":r.type),o=r&&r.target&&r.target.src;d.message="Loading chunk "+n+" failed.\n("+a+": "+o+")",d.name="ChunkLoadError",d.type=a,d.request=o,s[1](d)}};t.l(o,i,"chunk-"+n,n)}},t.O.j=function(n){return 0===e[n]};var n=function(n,r){var s,a,o=r[0],d=r[1],i=r[2],u=0;if(o.some((function(n){return 0!==e[n]}))){for(s in d)t.o(d,s)&&(t.m[s]=d[s]);if(i)var c=i(t)}for(n&&n(r);u<o.length;u++)a=o[u],t.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return t.O(c)},r=self["webpackChunkvue_3_authentication_jwt"]=self["webpackChunkvue_3_authentication_jwt"]||[];r.forEach(n.bind(null,0)),r.push=n.bind(null,r.push.bind(r))}();var r=t.O(void 0,[4998],(function(){return t(989)}));r=t.O(r)})();
//# sourceMappingURL=app.aec19b67.js.map