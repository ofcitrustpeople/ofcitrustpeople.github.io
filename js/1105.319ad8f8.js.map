{"version":3,"file":"js/1105.319ad8f8.js","mappings":"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","sources":["webpack://vue-3-authentication-jwt/./src/components/RightsTable.vue","webpack://vue-3-authentication-jwt/./src/components/RightsTable.vue?a519"],"sourcesContent":["\n<template>\n    <div class=\"mt-4 list\">\n      <div>\n      <div class=\"mb-3\">\n        <button @click=\"navigateToAddStudent\" class=\"btn btn-primary\" type=\"button\">Добавить студента</button>\n        <div class=\"col col-3 float-end\">\n        <input  class=\"form-control\" v-model=\"searchQuery\" @input=\"updateSearchQuery\" placeholder=\"Поиск...\"> \n      </div>\n    </div>\n        <!-- список студентов -->\n        <table v-if=\"loading\" class=\"table\">\n          <tbody>\n          \n            <td><div class=\"skeleton skeleton-animate\"></div></td>\n            <td><div class=\"skeleton skeleton-animate\"></div></td>\n            <td><div class=\"skeleton skeleton-animate\"></div></td>\n            <td><div class=\"skeleton skeleton-animate\"></div></td>\n            <td><div class=\"skeleton skeleton-animate\"></div></td>\n            <td><div class=\"skeleton skeleton-animate\"></div></td>\n          \n        </tbody>\n      </table>\n      <table v-else class=\"table\">\n          <!-- таблица -->\n          <thead>\n        <tr>\n          <th>Role Name</th>\n          <th>Create</th>\n          <th>Read</th>\n          <th>Update</th>\n          <th>Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(role, roleId) in groupedPermissions\" :key=\"roleId\">\n          <td>{{ role[0].RoleName }}</td>\n          <td><input type=\"checkbox\" v-model=\"rolePermissions[roleId][0]\" /></td>\n          <td><input type=\"checkbox\" v-model=\"rolePermissions[roleId][1]\" /></td>\n          <td><input type=\"checkbox\" v-model=\"rolePermissions[roleId][2]\" /></td>\n          <td><input type=\"checkbox\" v-model=\"rolePermissions[roleId][3]\" /></td>\n        </tr>\n      </tbody>\n        </table>\n        <button @click=\"savePermissions\">Save Permissions</button>\n  \n        <!-- странички -->\n        <nav class=\"float-start\">\n          <ul class=\"pagination\">\n            <li class=\"page-item\" :class=\"{ 'disabled': currentPage === 1 }\">\n              <button @click=\"prevPage\" class=\"page-link\">Предыдущая страница</button>\n            </li>\n            <li class=\"page-item\" v-for=\"pageNumber in pageRange\" :key=\"pageNumber\" :class=\"{ 'active': pageNumber == currentPage }\">\n              <button @click=\"changePage(pageNumber)\" class=\"page-link\">{{ pageNumber }}</button>\n            </li>\n            <li class=\"page-item\" :class=\"{ 'disabled': currentPage === totalPages }\">\n              <button @click=\"nextPage\" class=\"page-link\">Следующая страница</button>\n            </li>\n          </ul>\n        </nav>\n\n      </div>\n    </div>\n    </template>\n    \n    <script>\n  \n    import UserService from \"../services/user.service\";\n  \n  \n  \n  \n    export default {\n    \n  \n      data() {\n  \n  \n  \n  \n        return {\n  \n          \n          permissions: [], // Fetch your data from the API or database\n          currentPage: 1, // теущий номер страницы\n          permissionsPerPage: 10, // кол-во студентов на странице\n          maxPageButtons: 3,\n          loading: true,\n          searchQuery: '',\n\n          rolePermissions: {},\n        };\n      },\n      computed: {\n        // подсчет страниц\n        groupedPermissions() {\n\n            const startIndex = (this.currentPage - 1) * this.permissionsPerPage;\n    const endIndex = startIndex + this.permissionsPerPage;\n    const filteredpermissions = this.filterpermissions();\n    const filtered=filteredpermissions.slice(startIndex, endIndex);\n\n      // Group permissions by RoleId\n      const grouped = {};\n      filtered.forEach((permission) => {\n        const roleId = permission.RoleId;\n        if (!grouped[roleId]) {\n          grouped[roleId] = [];\n        }\n        grouped[roleId].push(permission);\n        \n        // Initialize rolePermissions for each roleId\n        if (!this.rolePermissions[roleId]) {\n          this.rolePermissions[roleId] = [false, false, false, false];\n        }\n        \n        // Check checkboxes based on the Operation value\n        const operation = permission.Operation;\n        this.rolePermissions[roleId][operation] = true;\n      });\n      return grouped;\n    },\n    totalPages() {\n      const filteredpermissions = this.filterpermissions();\n      return Math.ceil(filteredpermissions.length / this.permissionsPerPage);\n    },\n    paginatedpermissions() {\n      const startIndex = (this.currentPage - 1) * this.permissionsPerPage;\n      const endIndex = startIndex + this.permissionsPerPage;\n  \n      const filteredpermissions = this.filterpermissions();\n      return filteredpermissions.slice(startIndex, endIndex);\n    },\n    pageRange() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxButtons = this.maxPageButtons;\n      const ellipsis = '...';\n  \n      if (totalPages <= maxButtons) {\n        // If total pages are less than or equal to the max buttons, show all pages\n        return Array.from({ length: totalPages }, (_, i) => i + 1);\n      }\n  \n      // Calculate the start and end page numbers for the limited display\n      const halfMaxButtons = Math.floor(maxButtons / 2);\n      let startPage = Math.max(1, currentPage - halfMaxButtons);\n      let endPage = Math.min(totalPages, startPage + maxButtons - 1);\n  \n      // Ensure that we always show maxButtons, if possible\n      if (endPage - startPage + 1 < maxButtons) {\n        startPage = endPage - maxButtons + 1;\n      }\n  \n      // Insert an ellipsis and the last page when appropriate\n      const pageRange = [];\n  \n      if (startPage > 1) {\n        pageRange.push(1, ellipsis);\n      }\n  \n      for (let i = startPage; i <= endPage; i++) {\n        pageRange.push(i);\n      }\n  \n      if (endPage < totalPages) {\n        pageRange.push(ellipsis, totalPages);\n      }\n  \n      return pageRange;\n    },\n      },\n      methods: {\n        savePermissions() {\n      // Initialize arrays to track checked and unchecked permissions\n      this.checkedPermissions = [];\n      this.uncheckedPermissions = [];\n\n      Object.keys(this.rolePermissions).forEach((roleId) => {\n        this.rolePermissions[roleId].forEach((checked, operation) => {\n          const existingPermission = this.permissions.find(\n            (permission) =>\n              permission.RoleId === parseInt(roleId) &&\n              permission.Operation === operation\n          );\n          if (checked && !existingPermission) {\n            // This permission is new; add it to the checkedPermissions array\n            this.checkedPermissions.push({\n              RoleId: parseInt(roleId),\n              Operation: operation,\n            });\n          } else if (!checked && existingPermission) {\n            // This permission was unchecked; add it to the uncheckedPermissions array\n            this.uncheckedPermissions.push(existingPermission);\n          }\n        });\n      });\n\n      // Implement logic to save new permissions and remove unchecked permissions\n      console.log(\"New Permissions to Insert:\", this.checkedPermissions);\n      console.log(\"Unchecked Permissions to Remove:\", this.uncheckedPermissions);\n    },\n        async loadRightsTable() {\n          const table = this.$route.params.table;\n          try {\n            const response = await UserService.getPermissionByTable(table);\n            this.permissions = response.data;\n            // Клонирование объекта, для избежание редактирования данных сразу\n            this.loading=false;\n          } catch (error) {\n            console.error('Ошибка во время загрузки:', error);\n          }\n        },\n        filterpermissions() {\n      const queryString = this.searchQuery.toLowerCase();\n      return this.permissions.filter(permissions => {\n        return (\n          String(permissions.RoleName).toLowerCase().includes(queryString) \n        );\n      });\n    },\n \n\n  \n        updateSearchQuery() {\n    const query = { page: 1 }; // когда меняется фильтр летим на первую страницу\n    if (this.searchQuery.trim() !== '') {\n      query.search = this.searchQuery;\n    }\n    this.currentPage = 1; \n    this.$router.replace({ query });\n  },\n        // смена страницы\n        changePage(pageNumber) {\n    const query = { ...this.$route.query, page: pageNumber };\n    if (this.searchQuery.trim() !== '') {\n      query.search = this.searchQuery;\n    }\n    this.$router.replace({ query });\n  },\n        prevPage() {\n          if (this.currentPage > 1) {\n          this.changePage(this.currentPage - 1);\n          }\n        },\n        nextPage() {\n          if (this.currentPage < this.totalPages) {\n            this.changePage(this.currentPage + 1);\n          }\n        },\n        // смотрим детали о студенте\n \n      \n  \n       \n      },\n  \n      beforeRouteUpdate(to, from, next) {\n    // берём филтр из роутера\n    this.searchQuery = to.query.search || '';\n    // берём страницу из роутера\n    this.currentPage = parseInt(to.query.page) || 1;\n    next();\n  },\n  \n      created() {\n      const query = this.$route.query;\n      this.currentPage = parseInt(query.page) || 1;\n      this.searchQuery = query.search || '';\n     \n      this.loadRightsTable();\n      },\n    };\n    </script>\n  \n  <style>\n  .skeleton {\n    width: 100%;\n    height: 1.2em;\n    background-image: linear-gradient(125deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n    background-size: 200% 100%;\n    animation: skeletonShimmer 3.5s infinite linear;\n    border-radius: 4px;\n    margin: 0.2em 0;\n  }\n  \n  \n  \n  @keyframes skeletonShimmer {\n    0% {\n      background-position: 200% 0;\n    }\n    100% {\n      background-position: -200% 0;\n    }\n  }\n  \n  @keyframes skeletonFade {\n    0%, 100% {\n      opacity: 0.5;\n    }\n    50% {\n      opacity: 1;\n    }\n  }\n  </style>","import { render } from \"./RightsTable.vue?vue&type=template&id=c68bd0ca\"\nimport script from \"./RightsTable.vue?vue&type=script&lang=js\"\nexport * from \"./RightsTable.vue?vue&type=script&lang=js\"\n\nimport \"./RightsTable.vue?vue&type=style&index=0&id=c68bd0ca&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_5","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","_ctx","navigateToAddStudent","type","_hoisted_3","$data","searchQuery","$event","onInput","$options","updateSearchQuery","placeholder","loading","_hoisted_4","_hoisted_6","_hoisted_7","_hoisted_8","_Fragment","_renderList","groupedPermissions","role","roleId","key","_toDisplayString","RoleName","rolePermissions","savePermissions","_hoisted_13","_hoisted_14","_normalizeClass","currentPage","prevPage","pageRange","pageNumber","changePage","_hoisted_15","totalPages","nextPage","data","permissions","permissionsPerPage","maxPageButtons","computed","startIndex","this","endIndex","filteredpermissions","filterpermissions","filtered","slice","grouped","forEach","permission","RoleId","push","operation","Operation","Math","ceil","length","paginatedpermissions","maxButtons","ellipsis","Array","from","_","i","halfMaxButtons","floor","startPage","max","endPage","min","methods","checkedPermissions","uncheckedPermissions","Object","keys","checked","existingPermission","find","parseInt","console","log","loadRightsTable","table","$route","params","response","UserService","getPermissionByTable","error","queryString","toLowerCase","filter","String","includes","query","page","trim","search","$router","replace","beforeRouteUpdate","to","next","created","__exports__","render"],"sourceRoot":""}