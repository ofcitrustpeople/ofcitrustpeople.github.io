(function(){"use strict";var e={2798:function(e,n,t){var r=t(9242),s=t(3396);const o={id:"app"},a={class:"mycontainer"};function d(e,n,t,r,d,i){const u=(0,s.up)("Menu"),c=(0,s.up)("router-view");return(0,s.wg)(),(0,s.iD)("div",o,[(0,s.Wm)(u),(0,s._)("div",a,[(0,s.Wm)(c)])])}t(7658);var i=t(7139);function u(e,n,t,o,a,d){const u=(0,s.up)("MenuItem");return(0,s.wg)(),(0,s.iD)("div",{class:(0,i.C_)(["menu",{"small-menu":e.smallMenu}])},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(e.menuTree,((n,t)=>((0,s.wg)(),(0,s.j4)(u,{key:t,data:n.children,label:n.label,link:n.link,icon:n.icon,depth:0,smallMenu:e.smallMenu,onClick:(0,r.iM)((n=>t===e.menuTree.length-1?d.logOut():null),["prevent"]),class:(0,i.C_)({"bottom-fixed":t===e.menuTree.length-1})},null,8,["data","label","link","icon","smallMenu","onClick","class"])))),128))],2)}const c={class:"left"},l={key:0,class:"material-icons-outlined"},p={key:0,class:"right"};function m(e,n,t,o,a,d){const u=(0,s.up)("router-link"),m=(0,s.up)("menu-item",!0);return(0,s.wg)(),(0,s.iD)("div",{class:(0,i.C_)(["menu-item",{opened:e.expanded}])},[(0,s._)("div",{class:"label",onClick:n[0]||(n[0]=e=>d.toggleMenu()),style:(0,i.j5)({paddingLeft:20*t.depth+20+"px"})},[(0,s._)("div",c,[(0,s.Wm)(u,{to:t.link,class:"nav-link"},{default:(0,s.w5)((()=>[(0,s._)("span",null,[t.icon?((0,s.wg)(),(0,s.iD)("i",l,(0,i.zw)(t.icon),1)):(0,s.kq)("",!0)]),d.showLabel?((0,s.wg)(),(0,s.iD)("span",{key:0,class:(0,i.C_)({test:!t.smallMenu})},(0,i.zw)(t.label),3)):(0,s.kq)("",!0)])),_:1},8,["to"])]),t.data?((0,s.wg)(),(0,s.iD)("div",p,[(0,s._)("i",{class:(0,i.C_)(["expand material-icons-outlined",{opened:e.expanded}])},"expand_more",2)])):(0,s.kq)("",!0)],4),(0,s.wy)((0,s._)("div",{class:(0,i.C_)([{"small-menu":t.smallMenu},"items-container"]),style:(0,i.j5)({height:e.containerHeight}),ref:"container"},[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(t.data,((n,r)=>((0,s.wg)(),(0,s.j4)(m,{class:(0,i.C_)({opened:e.showChildren}),key:r,data:n.children,label:n.label,link:n.link,icon:n.icon,depth:t.depth+1,smallMenu:t.smallMenu},null,8,["class","data","label","link","icon","depth","smallMenu"])))),128))],6),[[r.F8,e.showChildren]])],2)}var _={name:"menu-item",data:()=>({showChildren:!1,expanded:!1,containerHeight:0}),props:{data:{type:Array},label:{type:String},link:{type:String},icon:{type:String},depth:{type:Number},smallMenu:{type:Boolean}},computed:{showLabel(){return!this.smallMenu||this.depth>0}},methods:{toggleMenu(){this.expanded=!this.expanded,this.showChildren?(this.containerHeight=this.$refs["container"].scrollHeight+"px",this.$refs["container"].style.overflow="hidden",setTimeout((()=>{this.containerHeight="0px"}),10),setTimeout((()=>{this.showChildren=!1}),300)):(this.showChildren=!0,this.$nextTick((()=>{this.containerHeight=this.$refs["container"].scrollHeight+"px",setTimeout((()=>{this.containerHeight="fit-content",-1!=navigator.userAgent.indexOf("Firefox")&&(this.containerHeight="-moz-max-content"),this.$refs["container"].style.overflow="visible"}),300)})))}}},h=t(89);const g=(0,h.Z)(_,[["render",m],["__scopeId","data-v-43f35467"]]);var f=g,b={name:"recursive-menu",data:()=>({smallMenu:!1,menuTree:[{label:"Домой",link:"/home",icon:"home"},{label:"Студенты",link:"",icon:"school",children:[{label:"Список студентов",link:"/students"},{label:"Направления",link:"/directions"},{label:"Профили",link:"/profiles"},{label:"Группы",link:"/groups"},{label:"Курсовые",link:"/courseworks"}]},{label:"Слушатели",link:"",icon:"contact_page",children:[{label:"Список слушателей",link:"/listeners"},{label:"Плательщики",link:"/payers"},{label:"Группы",link:"/lgroups"},{label:"Договора",link:"/contracts"},{label:"Программы",link:"/programs"},{label:"График платежей",link:"/payments"}]},{label:"Расписание",link:"",icon:"calendar_month",children:[{label:"Нагрузка",link:"/ScheduleLoads"},{label:"Аудитории",link:"/audits"}]},{label:"Настройки",link:"/profile",icon:"settings"},{label:"Выйти",link:"",icon:"logout"}]}),components:{MenuItem:f},methods:{logOut(){this.$store.dispatch("auth/logout"),this.$router.push("/login")}}};const y=(0,h.Z)(b,[["render",u],["__scopeId","data-v-1883e394"]]);var S=y,$={created(){this.$store.dispatch("auth/checkTokenExpiration")},components:{Menu:S},computed:{currentUser(){return this.$store.state.auth.user}},methods:{logOut(){this.$store.dispatch("auth/logout"),this.$router.push("/login")}}};const E=(0,h.Z)($,[["render",d]]);var A=E,T=t(2483);const O={class:"container"},C={class:"jumbotron"};function I(e,n,t,r,o,a){return(0,s.wg)(),(0,s.iD)("div",O,[(0,s._)("header",C,[(0,s._)("h3",null,(0,i.zw)(o.content),1)])])}var w=t(5124),R={name:"Home",data(){return{content:""}},mounted(){w.Z.getPublicContent().then((e=>{this.content=e.data}),(e=>{this.content=e.response&&e.response.data&&e.response.data.message||e.message||e.toString()}))}};const k=(0,h.Z)(R,[["render",I]]);var N=k;const v=e=>((0,s.dD)("data-v-7e43d1f8"),e=e(),(0,s.Cn)(),e),Z={class:"col-md-12 list"},q={class:"col-8 mx-auto"},L=v((()=>(0,s._)("img",{id:"profile-img",src:"//ssl.gstatic.com/accounts/ui/avatar_2x.png",class:"profile-img-card"},null,-1))),M={class:"form-group"},x=v((()=>(0,s._)("label",{for:"username"},"Логин:",-1))),Y={class:"form-group mb-3"},D=v((()=>(0,s._)("label",{for:"password"},"Пароль:",-1))),j={class:"form-group"},F=["disabled"],B={class:"spinner-border spinner-border-sm"},P=v((()=>(0,s._)("span",null,"Войти",-1))),H={class:"form-group"},W={key:0,class:"alert alert-danger",role:"alert"};function U(e,n,t,o,a,d){const u=(0,s.up)("Field"),c=(0,s.up)("ErrorMessage"),l=(0,s.up)("Form");return(0,s.wg)(),(0,s.iD)("div",Z,[(0,s._)("div",q,[L,(0,s.Wm)(l,{onSubmit:d.handleLogin,"validation-schema":a.schema},{default:(0,s.w5)((()=>[(0,s._)("div",M,[x,(0,s.Wm)(u,{name:"username",type:"text",class:"form-control"}),(0,s.Wm)(c,{name:"username",class:"error-feedback"})]),(0,s._)("div",Y,[D,(0,s.Wm)(u,{name:"password",type:"password",class:"form-control"}),(0,s.Wm)(c,{name:"password",class:"error-feedback"})]),(0,s._)("div",j,[(0,s._)("button",{class:"btn btn-primary btn-block",disabled:a.loading},[(0,s.wy)((0,s._)("span",B,null,512),[[r.F8,a.loading]]),P],8,F)]),(0,s._)("div",H,[a.message?((0,s.wg)(),(0,s.iD)("div",W,(0,i.zw)(a.message),1)):(0,s.kq)("",!0)])])),_:1},8,["onSubmit","validation-schema"])])])}var J=t(5708),V=t(7629),z={name:"Login",components:{Form:J.l0,Field:J.gN,ErrorMessage:J.Bc},data(){const e=V.Ry().shape({username:V.Z_().required("Требуется логин!"),password:V.Z_().required("Требуется пароль!")});return{loading:!1,message:"",schema:e}},computed:{loggedIn(){return this.$store.state.auth.status.loggedIn}},created(){this.loggedIn&&this.$router.push("/profile")},methods:{handleLogin(e){this.loading=!0,this.$store.dispatch("auth/login",e).then((()=>{this.$router.push("/home")}),(e=>{this.loading=!1,this.message=e.response&&e.response.data&&e.response.data.message||e.message||e.toString()}))}}};const G=(0,h.Z)(z,[["render",U],["__scopeId","data-v-7e43d1f8"]]);var K=G;const Q={class:"col-md-12"},X={class:"card card-container"},ee=(0,s._)("img",{id:"profile-img",src:"//ssl.gstatic.com/accounts/ui/avatar_2x.png",class:"profile-img-card"},null,-1),ne={key:0},te={class:"form-group"},re=(0,s._)("label",{for:"username"},"Username",-1),se={class:"form-group"},oe=(0,s._)("label",{for:"email"},"Email",-1),ae={class:"form-group"},de=(0,s._)("label",{for:"password"},"Password",-1),ie={class:"form-group"},ue=["disabled"],ce={class:"spinner-border spinner-border-sm"};function le(e,n,t,o,a,d){const u=(0,s.up)("Field"),c=(0,s.up)("ErrorMessage"),l=(0,s.up)("Form");return(0,s.wg)(),(0,s.iD)("div",Q,[(0,s._)("div",X,[ee,(0,s.Wm)(l,{onSubmit:d.handleRegister,"validation-schema":a.schema},{default:(0,s.w5)((()=>[a.successful?(0,s.kq)("",!0):((0,s.wg)(),(0,s.iD)("div",ne,[(0,s._)("div",te,[re,(0,s.Wm)(u,{name:"username",type:"text",class:"form-control"}),(0,s.Wm)(c,{name:"username",class:"error-feedback"})]),(0,s._)("div",se,[oe,(0,s.Wm)(u,{name:"email",type:"email",class:"form-control"}),(0,s.Wm)(c,{name:"email",class:"error-feedback"})]),(0,s._)("div",ae,[de,(0,s.Wm)(u,{name:"password",type:"password",class:"form-control"}),(0,s.Wm)(c,{name:"password",class:"error-feedback"})]),(0,s._)("div",ie,[(0,s._)("button",{class:"btn btn-primary btn-block",disabled:a.loading},[(0,s.wy)((0,s._)("span",ce,null,512),[[r.F8,a.loading]]),(0,s.Uk)(" Sign Up ")],8,ue)])]))])),_:1},8,["onSubmit","validation-schema"]),a.message?((0,s.wg)(),(0,s.iD)("div",{key:0,class:(0,i.C_)(["alert",a.successful?"alert-success":"alert-danger"])},(0,i.zw)(a.message),3)):(0,s.kq)("",!0)])])}var pe={name:"Register",components:{Form:J.l0,Field:J.gN,ErrorMessage:J.Bc},data(){const e=V.Ry().shape({username:V.Z_().required("Username is required!").min(3,"Must be at least 3 characters!").max(20,"Must be maximum 20 characters!"),email:V.Z_().required("Email is required!").email("Email is invalid!").max(50,"Must be maximum 50 characters!"),password:V.Z_().required("Password is required!").min(6,"Must be at least 6 characters!").max(40,"Must be maximum 40 characters!")});return{successful:!1,loading:!1,message:"",schema:e}},computed:{loggedIn(){return this.$store.state.auth.status.loggedIn}},mounted(){this.loggedIn&&this.$router.push("/home")},methods:{handleRegister(e){this.message="",this.successful=!1,this.loading=!0,this.$store.dispatch("auth/register",e).then((e=>{this.message=e.message,this.successful=!0,this.loading=!1}),(e=>{this.message=e.response&&e.response.data&&e.response.data.message||e.message||e.toString(),this.successful=!1,this.loading=!1}))}}};const me=(0,h.Z)(pe,[["render",le]]);var _e=me,he=t(1598),ge=t(4161);const fe="http://195.93.252.168:5050/api/Auth/";class be{login(e){return ge.Z.post(fe+"login",{username:e.username,password:e.password}).then((e=>(e.data.accessToken&&localStorage.setItem("user",JSON.stringify(e.data)),e.data)))}logout(){localStorage.removeItem("user")}register(e){return ge.Z.post(fe+"register",{username:e.username,password:e.password})}}var ye=new be;const Se=()=>t.e(526).then(t.bind(t,7526)),$e=()=>t.e(925).then(t.bind(t,5925)),Ee=()=>Promise.all([t.e(148),t.e(855)]).then(t.bind(t,855)),Ae=()=>t.e(890).then(t.bind(t,7890)),Te=()=>t.e(262).then(t.bind(t,1262)),Oe=()=>t.e(105).then(t.bind(t,1105)),Ce=()=>Promise.all([t.e(148),t.e(320)]).then(t.bind(t,4320)),Ie=()=>t.e(354).then(t.bind(t,8354)),we=()=>t.e(44).then(t.bind(t,6044)),Re=()=>Promise.all([t.e(148),t.e(451)]).then(t.bind(t,3451)),ke=()=>t.e(83).then(t.bind(t,7083)),Ne=()=>t.e(96).then(t.bind(t,2096)),ve=()=>Promise.all([t.e(148),t.e(337)]).then(t.bind(t,9337)),Ze=()=>t.e(559).then(t.bind(t,2559)),qe=()=>t.e(697).then(t.bind(t,5697)),Le=()=>Promise.all([t.e(148),t.e(796)]).then(t.bind(t,796)),Me=()=>t.e(63).then(t.bind(t,9063)),xe=()=>t.e(111).then(t.bind(t,3111)),Ye=()=>Promise.all([t.e(148),t.e(398)]).then(t.bind(t,9398)),De=()=>t.e(464).then(t.bind(t,9464)),je=()=>t.e(875).then(t.bind(t,3875)),Fe=()=>Promise.all([t.e(148),t.e(84)]).then(t.bind(t,84)),Be=()=>t.e(208).then(t.bind(t,9208)),Pe=()=>t.e(468).then(t.bind(t,4468)),He=()=>t.e(184).then(t.bind(t,184)),We=()=>t.e(114).then(t.bind(t,2796)),Ue=()=>Promise.all([t.e(148),t.e(355)]).then(t.bind(t,5355)),Je=()=>t.e(36).then(t.bind(t,9036)),Ve=()=>Promise.all([t.e(148),t.e(775)]).then(t.bind(t,9775)),ze=()=>t.e(518).then(t.bind(t,5518)),Ge=()=>t.e(689).then(t.bind(t,1689)),Ke=()=>t.e(644).then(t.bind(t,5644)),Qe=()=>Promise.all([t.e(148),t.e(975)]).then(t.bind(t,4975)),Xe=()=>t.e(569).then(t.bind(t,569)),en=()=>t.e(76).then(t.bind(t,2076)),nn=()=>Promise.all([t.e(148),t.e(310)]).then(t.bind(t,3310)),tn=()=>t.e(281).then(t.bind(t,2281)),rn=()=>t.e(461).then(t.bind(t,7461)),sn=()=>t.e(862).then(t.bind(t,2862)),on=()=>t.e(642).then(t.bind(t,1642)),an=()=>t.e(839).then(t.bind(t,7839)),dn=()=>Promise.all([t.e(148),t.e(92)]).then(t.bind(t,4092)),un=()=>t.e(946).then(t.bind(t,946)),cn=[{path:"/",name:"home",component:N},{path:"/home",component:N},{path:"/login",component:K},{path:"/register",component:_e},{path:"/profile",name:"profile",component:Se},{path:"/students",component:Ee},{path:"/students/:studentId",component:Ae},{path:"/rights/:table",component:Oe},{path:"/directions",component:Ce},{path:"/directions/:directionId",component:we},{path:"/AddDirection",component:Ie},{path:"/profiles",component:Re},{path:"/profiles/:profileId",component:Ne},{path:"/AddProfile",component:ke},{path:"/groups",component:ve},{path:"/groups/:groupId",component:qe},{path:"/AddGroup",component:Ze},{path:"/courses",component:nn},{path:"/courses/:courseID",component:tn},{path:"/AddCourse",component:en},{path:"/listeners",component:Le},{path:"/listeners/:listenerId",component:Me},{path:"/AddListener",component:xe},{path:"/payers",component:Ye},{path:"/payers/:payerId",component:De},{path:"/Addpayer",component:je},{path:"/contracts",component:Fe},{path:"/contracts/:contractId",component:Be},{path:"/AddContract",component:Pe},{path:"/ScheduleLoads",component:He},{path:"/addcw",component:We},{path:"/courseworks",component:Ue},{path:"/courseworks/:CwId",component:Je},{path:"/programs",component:Ve},{path:"/programs/:programId",component:Ge},{path:"/AddProgram",component:ze},{path:"/payments",component:Qe},{path:"/payments/:paymentID",component:Xe},{path:"/AddPayment",component:Ke},{path:"/audits",component:rn},{path:"/audits/:scheduleId",component:sn},{path:"/AddAudit",component:on},{path:"/lgroups",component:dn},{path:"/addlgroup",component:an},{path:"/lgroups/:groupId",component:un},{path:"/user",name:"user",component:$e},{path:"/AddStudent",component:Te}],ln=(0,T.p7)({history:(0,T.r5)(),routes:cn});ln.beforeEach(((e,n,t)=>{const r=["/login","/register","/home"],s=!r.includes(e.path),o=localStorage.getItem("user");if(s&&!o)t("/login");else if(o){const e=JSON.parse(o).accessToken;try{const n=(0,he.Z)(e),r=Date.now()/1e3;n.exp<r?(ye.logout(),t("/login")):t()}catch(a){t()}}else t()}));var pn=ln,mn=t(65);const _n=JSON.parse(localStorage.getItem("user")),hn=_n?{status:{loggedIn:!0},user:_n}:{status:{loggedIn:!1},user:null},gn={namespaced:!0,state:hn,actions:{login({commit:e},n){return ye.login(n).then((n=>(e("loginSuccess",n),Promise.resolve(n))),(n=>(e("loginFailure"),Promise.reject(n))))},logout({commit:e}){ye.logout(),e("logout")},register({commit:e},n){return ye.register(n).then((n=>(e("registerSuccess"),Promise.resolve(n.data))),(n=>(e("registerFailure"),Promise.reject(n))))},checkTokenExpiration({commit:e,state:n}){const t=n.user?n.user.accessToken:null;if(t)try{const n=(0,he.Z)(t),r=Date.now()/1e3;n.exp<r&&(ye.logout(),e("logout"))}catch(r){}}},mutations:{loginSuccess(e,n){e.status.loggedIn=!0,e.user=n},loginFailure(e){e.status.loggedIn=!1,e.user=null},logout(e){e.status.loggedIn=!1,e.user=null},registerSuccess(e){e.status.loggedIn=!1},registerFailure(e){e.status.loggedIn=!1}}},fn=(0,mn.MT)({modules:{auth:gn}});var bn=fn,yn=(t(2166),t(3494)),Sn=t(7749),$n=t(8539);yn.vI.add($n.J9Y,$n.ILF,$n.FKd,$n.$Wj,$n.jLD);var En=t(6204),An=t(4677);t(343);const Tn={};(0,r.ri)(A).use(pn).use(bn).use(An.ZP,Tn).component("font-awesome-icon",Sn.GN).component("Select2",En.Z).mount("#app")},5124:function(e,n,t){t.d(n,{Z:function(){return d}});var r=t(4161);function s(){let e=JSON.parse(localStorage.getItem("user"));return e&&e.accessToken?{accept:"*/*","Content-Type":"application/json;charset=UTF-8",Authorization:"Bearer "+e.accessToken}:{}}const o="http://195.93.252.168:5050/api/Query/";class a{getPublicContent(){return r.Z.get(o+'"SuperHeroes"',{headers:s()})}getAllStudents(){return r.Z.get(o+"students",{headers:s()})}deleteStudentById(e){const n={query:`DELETE FROM students where "student_id" = '${e}'`};return r.Z.post(o,n,{headers:s()})}getAllFormattedStudents(){const e={query:"SELECT \n      s.student_id,\n      CONCAT_WS(' ', s.last_name, s.first_name, s.patronymic) AS full_name,\n      CONCAT_WS('/', g.group_number, NULLIF(s.subgroup, '')) AS group_name,\n      g.group_number,\n      s.subgroup,\n      TO_CHAR(s.enrolled_date, 'DD/MM/YYYY') AS formatted_enrolled_date,\n      s.enrollment_order,\n      TO_CHAR(s.date_of_birth, 'DD/MM/YYYY') AS formatted_date_of_birth,\n      s.course\n  FROM \n      students s\n  JOIN \n      groups g ON s.group_id = g.group_id\n  ORDER BY \n      full_name ASC;"};return r.Z.post(o,e,{headers:s()})}getStudentById(e){const n={query:`SELECT\n      *,\n      TO_CHAR(date_of_birth, 'YYYY-MM-DD') AS date_of_birth,\n      TO_CHAR(enrolled_date, 'YYYY-MM-DD') AS enrolled_date\n  FROM\n      students\n  WHERE\n      student_id = ${e};`};return r.Z.post(o,n,{headers:s()})}updateStudentById(e,n,t,a,d,i,u,c,l,p,m,_,h,g,f,b,y,S,$){const E={query:`"first_name" = '${n}',\n      "last_name" = '${t}',\n      "patronymic" = '${a}',\n      "gender" = '${d}',\n      "date_of_birth" = '${i}',\n      "passport_series_and_number" = '${u}',\n      "INN" = '${c}',\n      "SNILS" = '${l}',\n      "place_of_birth" = '${p}',\n      "email" = '${m}',\n      "student_login" = '${_}',\n      "enrollment_order" = '${h}',\n      "enrolled_date" = '${g}',\n      "group_id" = '${f}',\n      "subgroup" = '${b}',\n      "zachetka_number"= '${y}',\n      "phone_number"= '${S}',\n      "phone_number_rod"= '${$}'\n  WHERE\n      "student_id" = '${e}';`};return r.Z.put(o+"students",E,{headers:s()})}addStudent(e,n,t,a,d,i,u,c,l,p,m,_,h,g,f,b,y,S){const $={query:`INSERT INTO "students" (\n        "first_name",\n        "last_name",\n        "patronymic",\n        "gender",\n        "date_of_birth",\n        "passport_series_and_number",\n        "INN",\n        "SNILS",\n        "place_of_birth",\n        "email",\n        "student_login",\n        "enrollment_order",\n        "enrolled_date",\n        "group_id",\n        "subgroup",\n        "phone_number",\n        "phone_number_rod",\n        "zachetka_number"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}',\n        '${d}',\n        '${i}',\n        '${u}',\n        '${c}',\n        '${l}',\n        '${p}',\n        '${m}',\n        '${_}',\n        '${h}',\n        '${g}',\n        '${f}',\n        '${b}',\n        '${y}',\n        '${S}'\n    );`};return r.Z.post(o,$,{headers:s()})}getStudentsAsIdText(){const e={query:"SELECT student_id AS id, \n      CONCAT_WS(' ',last_name, first_name,patronymic) AS text\n      FROM \"students\" ORDER BY \n      text ASC;;"};return r.Z.post(o,e,{headers:s()})}getDepartamentsAsIdText(){const e={query:'SELECT dep_id AS id, \n      dep_name AS text\n      FROM "departaments" ORDER BY \n      text ASC;;'};return r.Z.post(o,e,{headers:s()})}getGroupsAsIdText(){const e={query:'SELECT group_id AS id, group_number AS text\n      FROM "groups" ORDER BY \n      text ASC;'};return r.Z.post(o,e,{headers:s()})}getGroupsAsKOSTIL(){const e={query:'SELECT group_number AS id, group_number AS text\n      FROM "groups" ORDER BY \n      text ASC;'};return r.Z.post(o,e,{headers:s()})}getProgramsAsIdText(){const e={query:'SELECT id, program_name AS text\n      FROM "programs" ORDER BY \n      text ASC;'};return r.Z.post(o,e,{headers:s()})}getPermissionByTable(e){const n={query:`SELECT p.*, r."RoleName"\n      FROM "Permissions" AS p\n      INNER JOIN "Roles" AS r ON p."RoleId" = r."RoleId"\n      WHERE p."TableName" = '${e}';`};return r.Z.post(o,n,{headers:s()})}getAllDirections(){const e={query:"SELECT * from directions ORDER BY \n      dir_name ASC;"};return r.Z.post(o,e,{headers:s()})}getDirectionById(e){const n={query:`SELECT * from directions where \n      dir_id='${e}';`};return r.Z.post(o,n,{headers:s()})}addDirection(e,n){const t={query:`INSERT INTO "directions" (\n        "dir_name",\n        "dir_code"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.Z.post(o,t,{headers:s()})}updateDirectionById(e,n,t){const a={query:`"dir_name" = '${n}',\n      "dir_code" = '${t}'\n  WHERE\n      "dir_id" = '${e}';`};return r.Z.put(o+"directions",a,{headers:s()})}getAllSubjects(){const e={query:"SELECT * from subjects;"};return r.Z.post(o,e,{headers:s()})}getSubjectById(e){const n={query:`SELECT * from subjects where \n      subject_id='${e}';`};return r.Z.post(o,n,{headers:s()})}addSubject(e,n){const t={query:`INSERT INTO "subjects" (\n        "subject_id",\n        "subject_name"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.Z.post(o,t,{headers:s()})}updateSubjectById(e,n){const t={query:`"subject_name" = '${n}',\n  WHERE\n      "subject_id" = '${e}';`};return r.Z.put(o+"subjects",t,{headers:s()})}getAllTeachers(){const e={query:"SELECT * from teachers;"};return r.Z.post(o,e,{headers:s()})}getTeachersForSubject(e){const n={query:`SELECT \n      t.teacher_id, \n      t.first_name, \n      t.last_name, \n      t.patronymic \n    FROM \n      "teachers" t \n    JOIN \n      "employment" e \n    ON \n      t.teacher_id = e.teacher_id \n    WHERE \n      e.subject_id = '${e}';`};return r.Z.post(o,n,{headers:s()})}getSubjectsForTeacher(e){const n={query:`SELECT \n        g.group_number, \n        s.subject_name, \n        t.last_name \n      FROM \n        workload as w \n      JOIN \n        groups as g \n      ON \n        w.group_id = g.group_id \n      JOIN \n        subjects as s \n      ON \n        w.subject_id = s.subject_id \n      JOIN \n        teachers as t \n      ON \n        t.teacher_id = w.teacher_id \n      WHERE \n        w.teacher_id = '${e}';`};return r.Z.post(o,n,{headers:s()})}getTeacherById(e){const n={query:`SELECT * from teachers where \n      teacher_id='${e}';`};return r.Z.post(o,n,{headers:s()})}addTeacher(e,n,t,a){const d={query:`INSERT INTO "teachers" (\n        "teacher_id",\n        "first_name"\n        "last_name"\n        "patronymic"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}'\n    );`};return r.Z.post(o,d,{headers:s()})}updateTeacherById(e,n,t,a){const d={query:`"first_name" = '${n}',\n      "last_name" = '${t}',\n      "patronymic" = '${a}'\n  WHERE\n      "teacher_id" = '${e}';`};return r.Z.put(o+"teachers",d,{headers:s()})}getAllEmployments(){const e={query:'SELECT\n    e.emp_id,\n    e.teacher_id,\n    t.first_name,\n    t.last_name,\n    t.patronymic,\n    e.subject_id,\n    s.subject_name   \n  FROM \n    "employment" e\n  JOIN\n    "teachers" t\n  ON\n    t.teacher_id = e.teacher_id\n  JOIN\n    "subjects" s\n  ON\n    s.subject_id = e.subject_id  \n    ;'};return r.Z.post(o,e,{headers:s()})}getEmploymentById(e){const n={query:`SELECT * from employment where \n    emp_id='${e}';`};return r.Z.post(o,n,{headers:s()})}addEmployment(e,n,t){const a={query:`INSERT INTO "employment" (\n      "emp_id",\n      "teacher_id"\n      "subject_id"\n  ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}'\n  );`};return r.Z.post(o,a,{headers:s()})}updateEmploymentById(e,n,t){const a={query:`"teacher_id" = '${n}',\n    "subject_id" = '${t}'\nWHERE\n    "emp_id" = '${e}';`};return r.Z.put(o+"teachers",a,{headers:s()})}getAllWorkloads(){const e={query:"SELECT * FROM workload"};return r.Z.post(o,e,{headers:s()})}getWorkload(e){const n={query:`SELECT * FROM workload\n    WHERE\n     "group_id" = '${e}'\n    `};return r.Z.post(o,n,{headers:s()})}editWorkload(e,n){const t={query:`UPDATE "workload"\n    SET\n      "teacher_id" = '${n}'\n    WHERE\n      "wl_id" = '${e}'\n    ;`};return r.Z.post(o,t,{headers:s()})}addWorkload(e,n,t){const a={query:`INSERT INTO "workload" (\n      "group_id",\n      "subject_id",\n      "teacher_id"\n  ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}'\n  );`};return r.Z.post(o,a,{headers:s()})}getAllProfiles(){const e={query:'SELECT\n      p.prof_id,\n      p.prof_name,\n      d.dir_id,\n      d.dir_name,\n      d.dir_code\n  FROM\n      "profiles" p\n  JOIN\n      "directions" d ON p.prof_dir_id = d.dir_id\n      ORDER BY \n      p.prof_name ASC;\n  '};return r.Z.post(o,e,{headers:s()})}getProfileById(e){const n={query:`SELECT * from profiles where \n      prof_id='${e}';`};return r.Z.post(o,n,{headers:s()})}addProfile(e,n){const t={query:`INSERT INTO "profiles" (\n        "prof_dir_id",\n        "prof_name"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.Z.post(o,t,{headers:s()})}updateProfileById(e,n,t){const a={query:`"prof_dir_id" = '${n}',\n      "prof_name" = '${t}'\n  WHERE\n      "prof_id" = '${e}';`};return r.Z.put(o+"profiles",a,{headers:s()})}getDirectionsAsIdText(){const e={query:'SELECT dir_id AS id, dir_code AS text\n      FROM "directions" ORDER BY \n      text ASC;'};return r.Z.post(o,e,{headers:s()})}getProfilesAsIdText(){const e={query:'SELECT prof_id AS id, prof_name AS text\n      FROM "profiles" ORDER BY \n      text ASC;'};return r.Z.post(o,e,{headers:s()})}getAllGroups(){const e={query:'SELECT\n      g.group_id,\n      g.group_number,\n      g.course,\n      g.magister,\n      p.prof_name,\n      d.dir_name,\n      d.dir_code\n  FROM\n      "groups" AS g\n  JOIN\n      "profiles" AS p\n  ON\n      g.group_prof_id = p.prof_id\n  JOIN\n      "directions" AS d\n  ON\n      g.group_dir_id = d.dir_id  ORDER BY \n      g.group_number ASC;\n  '};return r.Z.post(o,e,{headers:s()})}getGroupById(e){const n={query:`SELECT * from groups where \n      group_id='${e}';`};return r.Z.post(o,n,{headers:s()})}addGroup(e,n,t,a,d){const i={query:`INSERT INTO "groups" (\n        "group_dir_id",\n        "group_prof_id",\n        "group_number",\n        "course",\n        "magister"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}',\n        '${d}'\n    );`};return r.Z.post(o,i,{headers:s()})}updateGroupById(e,n,t,a,d,i){const u={query:`"group_dir_id" = '${n}',\n      "group_prof_id" = '${t}',\n      "group_number" = '${a}',\n      "course" = '${d}',\n      "magister" = '${i}'\n  WHERE\n      "group_id" = '${e}';`};return r.Z.put(o+"groups",u,{headers:s()})}getAllLgroups(){const e={query:'SELECT\n      *\n  FROM\n      "l_groups" AS g\n      join programs p ON g.group_program_id=p.id;\n  '};return r.Z.post(o,e,{headers:s()})}addLgroup(e,n,t,a,d,i,u,c){const l={query:`INSERT INTO "l_groups" (\n        "group_number",\n        "group_program_id",\n        "hours",\n        "start_date",\n        "end_date",\n        "starttime",\n        "endtime",\n        "people_count"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}',\n        '${d}',\n        '${i}',\n        '${u}',\n        '${c}'\n    );`};return r.Z.post(o,l,{headers:s()})}updateLgroupById(e,n,t,a,d,i,u,c,l){const p={query:`"group_number" = '${n}',\n      "group_program_id" = '${t}',\n      "hours" = '${a}',\n      "start_date" = '${d}',\n      "end_date" = '${i}',\n      "StartTime" = '${u}',\n      "EndTime" = '${c}',\n      "people_count" = '${l}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(o+"l_groups",p,{headers:s()})}getLgroupById(e){const n={query:`SELECT *,TO_CHAR(end_date, 'YYYY-MM-DD') AS end_date,TO_CHAR(start_date, 'YYYY-MM-DD') AS start_date from l_groups where \n      id='${e}';`};return r.Z.post(o,n,{headers:s()})}getAllListeners(){const e={query:"SELECT\n      *,\n      CONCAT(l.lastname, ' ', l.name, ' ', l.surname) AS full_name,\n      l.phone_number,\n      l.email,\n      l.id as list_id\n     \n  FROM\n      \"listeners\" as l\n      LEFT JOIN l_groups as lg ON l.group_id=lg.id;\n\n      ;\n  "};return r.Z.post(o,e,{headers:s()})}getListenerById(e){const n={query:`SELECT *, TO_CHAR(issue_date , 'YYYY-MM-DD') AS issue_date from listeners where \n      id='${e}';`};return r.Z.post(o,n,{headers:s()})}addListener(e,n,t,a,d,i,u,c,l,p,m,_){const h={query:`INSERT INTO "listeners" (\n        "name",\n        "surname",\n        "lastname",\n        group_id,\n        "snils",\n        "passport",\n        "issued_by",\n        "issue_date",\n        "department_code",\n        "registration_address",\n        "phone_number",\n        "email"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}',\n        '${d}',\n        '${i}',\n        '${u}',\n        '${c}',\n        '${l}',\n        '${p}',\n        '${m}',\n        '${_}'\n    );`};return r.Z.post(o,h,{headers:s()})}updateListenerById(e,n,t,a,d,i,u,c,l,p,m,_,h){const g={query:` "name" ='${n}',\n      "surname" ='${t}',\n      "lastname"=  '${a}',\n      "group_id"=  '${d}',\n      "snils"= '${i}',\n      "passport"= '${u}',\n      "issued_by"= '${c}',\n      "issue_date"='${l}',\n      "department_code"='${p}',\n      "registration_address"='${m}',\n      "phone_number"='${_}',\n      "email"='${h}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(o+"listeners",g,{headers:s()})}getAllContracts(){const e={query:"SELECT \n      contracts.id AS contract_id,\n      listeners.id AS listener_id,\n      CONCAT(listeners.lastname, ' ', listeners.name, ' ', listeners.surname) AS listener_full_name,\n      listeners.snils AS listener_snils,\n      listeners.passport AS listener_passport,\n      listeners.issued_by AS listener_issued_by,\n      listeners.issue_date AS listener_issue_date,\n      listeners.department_code AS listener_department_code,\n      listeners.registration_address AS listener_registration_address,\n      listeners.phone_number AS listener_phone_number,\n      listeners.email AS listener_email,\n      payers.id AS payer_id,\n      CONCAT(payers.lastname, ' ', payers.name, ' ', payers.surname) AS payer_full_name,\n      payers.snils AS payer_snils,\n      payers.passport AS payer_passport,\n      payers.issued_by AS payer_issued_by,\n      payers.issue_date AS payer_issue_date,\n      payers.department_code AS payer_department_code,\n      payers.registration_address AS payer_registration_address,\n      payers.phone_number AS payer_phone_number,\n      payers.email AS payer_email,\n      programs.program_name,\n      contracts.contr_number,\n      contracts.id\n  FROM \n      contracts\n  JOIN\n      listeners ON contracts.listener_id = listeners.id\n  JOIN\n      payers ON contracts.payer_id = payers.id\n  JOIN\n      programs ON contracts.program_id = programs.id;\n  "};return r.Z.post(o,e,{headers:s()})}getContractById(e){const n={query:`SELECT * from contracts where \n      id='${e}';`};return r.Z.post(o,n,{headers:s()})}addContract(e,n,t,a){const d={query:`INSERT INTO contracts (listener_id, payer_id, contr_number, program_id)\n      VALUES(\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}'\n    );`};return r.Z.post(o,d,{headers:s()})}updateContractById(e,n,t,a,d){const i={query:` "listener_id" ='${n}',\n      "payer_id" ='${t}',\n      "contr_number"= '${a}',\n      "program_id"= '${d}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(o+"contracts",i,{headers:s()})}getPayersAsIdText(){const e={query:"SELECT id AS id, CONCAT(lastname, ' ', name, ' ', surname) AS text\n      FROM \"payers\" ORDER BY \n      text ASC;"};return r.Z.post(o,e,{headers:s()})}getLgroupsAsIdText(){const e={query:'SELECT id AS id, group_number AS text\n      FROM "l_groups" ORDER BY \n      text ASC;'};return r.Z.post(o,e,{headers:s()})}getListenersAsIdText(){const e={query:"SELECT id AS id, CONCAT(lastname, ' ', name, ' ', surname) AS text\n      FROM \"listeners\" ORDER BY \n      text ASC;"};return r.Z.post(o,e,{headers:s()})}getAllCws(){const e={query:"SELECT\n      cw.course_work_id,\n      cw.course_work_teacher_id,\n      cw.course_work_theme,\n      cw.course_work_student_id,\n      cw.course_work_kafedra,\n      CONCAT(s.last_name, ' ', s.first_name, ' ', s.patronymic) AS full_name,\n      s.gender AS student_gender,\n      s.date_of_birth AS student_date_of_birth,\n      s.passport_series_and_number AS student_passport,\n      s.\"INN\" AS student_INN,\n      s.\"SNILS\" AS student_SNILS,\n      s.place_of_birth AS student_place_of_birth,\n      s.email AS student_email,\n      s.student_login AS student_login,\n      s.enrollment_order AS student_enrollment_order,\n      s.enrolled_date AS student_enrolled_date,\n      s.course AS student_course,\n      s.group_id AS student_group_id,\n      s.subgroup AS student_subgroup,\n      d.dep_name,\n      CONCAT(t.last_name, ' ', t.first_name, ' ', t.patronymic) AS full_name_t\n  FROM\n      course_work cw\n  JOIN\n      students s ON cw.course_work_student_id = s.student_id\n  JOIN\n      departaments d ON cw.course_work_kafedra=d.dep_id\n  JOIN\n      teachers t ON cw.course_work_teacher_id=t.teacher_id;\n  \n  "};return r.Z.post(o,e,{headers:s()})}getCwById(e){const n={query:`SELECT * from course_work where \n      course_work_id='${e}';`};return r.Z.post(o,n,{headers:s()})}addCw(e,n,t,a,d,i,u){const c={query:`INSERT INTO course_work (course_work_theme, course_work_teacher_id, course_work_student_id, course_work_kafedra,course_work_vipysk,course_work_year,course_work_ocenka)\n      VALUES(\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}',\n        '${d}',\n        '${i}',\n        '${u}'\n    );`};return r.Z.post(o,c,{headers:s()})}updateCwById(e,n,t,a,d,i,u,c){const l={query:` "course_work_theme" ='${n}',\n      "course_work_teacher_id" ='${t}',\n      "course_work_student_id"= '${a}',\n      "course_work_kafedra"= '${d}',\n      "course_work_vipysk" ='${i}',\n      "course_work_year" ='${u}',\n      "course_work_ocenka" ='${c}'\n  WHERE\n      "course_work_id" = '${e}';`};return r.Z.put(o+"course_work",l,{headers:s()})}getAllPayers(){const e={query:"SELECT\n      CONCAT(lastname, ' ', name, ' ', surname) AS full_name,\n      phone_number,\n      email,\n      id\n  FROM\n      payers;\n  "};return r.Z.post(o,e,{headers:s()})}getPayerById(e){const n={query:`SELECT *, TO_CHAR(issue_date , 'YYYY-MM-DD') AS issue_date from payers where \n      id='${e}';`};return r.Z.post(o,n,{headers:s()})}addPayer(e,n,t,a,d,i,u,c,l,p,m){const _={query:`INSERT INTO "payers" (\n        "name",\n        "surname",\n        "lastname",\n        "snils",\n        "passport",\n        "issued_by",\n        "issue_date",\n        "department_code",\n        "registration_address",\n        "phone_number",\n        "email"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}',\n        '${d}',\n        '${i}',\n        '${u}',\n        '${c}',\n        '${l}',\n        '${p}',\n        '${m}'\n    );`};return r.Z.post(o,_,{headers:s()})}updatePayerById(e,n,t,a,d,i,u,c,l,p,m,_){const h={query:` "name" ='${n}',\n      "surname" ='${t}',\n      "lastname"=  '${a}',\n      "snils"= '${d}',\n      "passport"= '${i}',\n      "issued_by"= '${u}',\n      "issue_date"='${c}',\n      "department_code"='${l}',\n      "registration_address"='${p}',\n      "phone_number"='${m}',\n      "email"='${_}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(o+"payers",h,{headers:s()})}getAllCourses(){const e={query:'SELECT\n      c.course_id,\n      c.course,\n      c.group_id,\n      g.group_number\n  FROM\n      "courses" c\n  JOIN\n      "groups" g ON c.group_id = g.group_id\n      ORDER BY \n      c.course ASC;\n  '};return r.Z.post(o,e,{headers:s()})}getCourseById(e){const n={query:`SELECT * from courses where \n      course_id='${e}';`};return r.Z.post(o,n,{headers:s()})}addCourse(e,n){const t={query:`INSERT INTO "courses" (\n        "course",\n        "group_id"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.Z.post(o,t,{headers:s()})}updateCourseById(e,n,t){const a={query:`"course" = '${n}',\n      "group_id" = '${t}'\n  WHERE\n      "course_id" = '${e}';`};return r.Z.put(o+"courses",a,{headers:s()})}getAllPrograms(){const e={query:"SELECT\n      id,\n      required_amount,\n      program_name,\n      hours,\n      TO_CHAR(start_date , 'YYYY-MM-DD') AS start_date,\n      TO_CHAR(end_date , 'YYYY-MM-DD') AS end_date\n  FROM\n    programs;\n  "};return r.Z.post(o,e,{headers:s()})}getProgramById(e){const n={query:`SELECT *, TO_CHAR(start_date , 'YYYY-MM-DD') AS start_date, TO_CHAR(end_date , 'YYYY-MM-DD') AS end_date from programs where \n      id='${e}';`};return r.Z.post(o,n,{headers:s()})}addProgram(e,n,t,a,d){const i={query:`INSERT INTO "programs" (\n        "required_amount",\n        "program_name",\n        "hours",\n        "start_date",\n        "end_date"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}',\n        '${d}'\n    );`};return r.Z.post(o,i,{headers:s()})}getPaymentById(e){const n={query:`SELECT *, TO_CHAR(date_40 , 'YYYY-MM-DD') AS date_40, TO_CHAR(expiration_date , 'YYYY-MM-DD') AS expiration_date from pay_graph where \n      id='${e}';`};return r.Z.post(o,n,{headers:s()})}updateProgramById(e,n,t,a,d,i){const u={query:`"required_amount" ='${n}',\n      "program_name" ='${t}',\n      "hours"=  '${a}',\n      "start_date"= '${d}',\n      "end_date"= '${i}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(o+"programs",u,{headers:s()})}getAllPayments(){const e={query:"SELECT\n      *, TO_CHAR(expiration_date, 'DD/MM/YYYY') AS expiration_date, TO_CHAR(date_40, 'DD/MM/YYYY') AS date_40 from pay_graph p\n      JOIN contracts c ON p.contract_id=c.id;\n  "};return r.Z.post(o,e,{headers:s()})}getAuditAsIdText(){const e={query:'SELECT aud_id AS id, number AS text\n      FROM "auditorium";'};return r.Z.post(o,e,{headers:s()})}getSubjectAsIdText(){const e={query:'SELECT subject_id AS id, subject_name AS text\n      FROM "subjects";'};return r.Z.post(o,e,{headers:s()})}getContractsAsIdText(){const e={query:'SELECT id AS id, contr_number AS text\n      FROM "contracts";'};return r.Z.post(o,e,{headers:s()})}getTeachersAsIdText(){const e={query:"SELECT teacher_id AS id, \n      CONCAT_WS(' ',last_name, first_name,patronymic) AS text\n      FROM \"teachers\" ORDER BY \n      text ASC;;"};return r.Z.post(o,e,{headers:s()})}updatePaymentById(e,n,t,a,d,i,u,c){const l={query:`"contract_id" ='${n}',\n      "expiration_date" ='${t}',\n      "date_40"=  '${a}',\n      "all_sum"= '${d}',\n      "deposited_amount"= '${i}',\n      "left_to_pay"= '${u}',\n      "bank"= '${c}'\n  WHERE\n      "id" = '${e}';`};return r.Z.put(o+"pay_graph",l,{headers:s()})}addPayment(e,n,t,a,d,i,u){const c={query:`INSERT INTO "pay_graph" (\n        "contract_id",\n        "expiration_date",\n        "date_40",\n        "all_sum",\n        "deposited_amount",\n        "left_to_pay",\n        "bank"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${a}',\n        '${d}',\n        '${i}',\n        '${u}'\n    );`};return r.Z.post(o,c,{headers:s()})}getPaymentsAsIdText(){const e={query:'SELECT id, contr_number AS text\n      FROM "contracts" ORDER BY \n      text ASC;'};return r.Z.post(o,e,{headers:s()})}getDaysAsIdText(){const e={query:'SELECT day_id AS id, dayofweek AS text\n      FROM "days";'};return r.Z.post(o,e,{headers:s()})}savesSchedule(e,n,t,a){const d={query:`INSERT INTO "schedule" (\n          "aud_id",\n          "day_id",\n          "subject_id",\n          "teacher_id"\n      ) VALUES (\n          '${e}',\n          '${n}',\n          '${t}',\n          '${a}'\n      );`};return r.Z.post(o,d,{headers:s()})}getAllAudit(){const e={query:"SELECT\n       c.schedule_id,\n       a.number,\n       a.type,\n       a.count,\n       s.subject_name,\n       d.dayofweek,\n       CONCAT_WS(' ', t.last_name, t.first_name, t.patronymic) AS full_name\n       \n    FROM\n      schedule c\n      join\n      auditorium a on c.aud_id=a.aud_id\n      join\n      subjects s on c.subject_id=s.subject_id\n      join\n      days d on c.day_id=d.day_id\n      join \n      teachers t on c.teacher_id=t.teacher_id;\n    "};return r.Z.post(o,e,{headers:s()})}getAuditById(e){const n={query:`SELECT * from schedule where \n        schedule_id='${e}';`};return r.Z.post(o,n,{headers:s()})}updateScheduleById(e,n,t,a,d){const i={query:`"day_id = '${n}',\n        subject_id = '${t}',\n        teacher_id = '${a}',\n        aud_id = '${d}'\n    WHERE\n        "schedule_id" = '${e}';`};return r.Z.put(o+"schedule",i,{headers:s()})}deleteScheduleById(e){const n={query:`DELETE FROM schedule where "schedule_id" = '${e}'`};return r.Z.post(o,n,{headers:s()})}}var d=new a}},n={};function t(r){var s=n[r];if(void 0!==s)return s.exports;var o=n[r]={exports:{}};return e[r].call(o.exports,o,o.exports,t),o.exports}t.m=e,function(){var e=[];t.O=function(n,r,s,o){if(!r){var a=1/0;for(c=0;c<e.length;c++){r=e[c][0],s=e[c][1],o=e[c][2];for(var d=!0,i=0;i<r.length;i++)(!1&o||a>=o)&&Object.keys(t.O).every((function(e){return t.O[e](r[i])}))?r.splice(i--,1):(d=!1,o<a&&(a=o));if(d){e.splice(c--,1);var u=s();void 0!==u&&(n=u)}}return n}o=o||0;for(var c=e.length;c>0&&e[c-1][2]>o;c--)e[c]=e[c-1];e[c]=[r,s,o]}}(),function(){t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,{a:n}),n}}(),function(){t.d=function(e,n){for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}}(),function(){t.f={},t.e=function(e){return Promise.all(Object.keys(t.f).reduce((function(n,r){return t.f[r](e,n),n}),[]))}}(),function(){t.u=function(e){return"js/"+e+"."+{36:"1bbcbd38",44:"423a8687",63:"5688e58e",76:"6bd06b8c",83:"f71a77bd",84:"d4707aab",92:"1c34cdfc",96:"7f480c3a",105:"dea2e277",111:"7c789349",114:"736db06c",148:"3e2e57af",184:"3759adc5",208:"fdc17b6b",262:"a921d5d8",281:"ade4df15",310:"caf0d747",320:"88fedbd6",337:"8554d51c",354:"379bfdf3",355:"7da73e95",398:"48508e42",451:"a2e6734f",461:"e5ec7e16",464:"5765e8ce",468:"d04f7d5c",518:"62dd5b44",526:"894e5623",559:"2424c173",569:"78c49131",642:"7a67010f",644:"1cf6d3e1",689:"b049ee12",697:"8ed7df52",775:"da43eac7",796:"23669b93",839:"2b81150a",855:"e1a78abd",862:"758fe5c0",875:"d4ff2f6c",890:"4604a19f",925:"b7b46625",946:"937fc828",975:"9c6e620f"}[e]+".js"}}(),function(){t.miniCssF=function(e){return"css/"+e+"."+{36:"d0be88d8",44:"af5a7bb3",63:"acec02a3",76:"b2275eb6",83:"33604b5d",84:"70eda97f",92:"2de17402",96:"490afdc7",105:"523d2a97",111:"6b75e095",114:"67260d5d",148:"91e589cf",184:"855ace5f",208:"9b275057",262:"fc9fc4a9",281:"57951295",310:"112d5f44",320:"96bec71b",337:"959ad9a3",354:"60c9000c",355:"599c00d5",398:"aa36eb4d",451:"76465913",461:"e3601d79",464:"828f8b12",468:"6e4867a3",518:"5a308c9a",559:"86bfcd4d",569:"d4fbd7e1",642:"97ba118a",644:"33f2350a",689:"1e4f1b76",697:"b2660b38",775:"988b52a1",796:"453d65f0",839:"a2ffad4b",855:"351cc955",862:"ce7e43f1",875:"f068631d",890:"71c9b4a0",946:"3235a04d",975:"178d2831"}[e]+".css"}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)}}(),function(){var e={},n="vue-3-authentication-jwt:";t.l=function(r,s,o,a){if(e[r])e[r].push(s);else{var d,i;if(void 0!==o)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var l=u[c];if(l.getAttribute("src")==r||l.getAttribute("data-webpack")==n+o){d=l;break}}d||(i=!0,d=document.createElement("script"),d.charset="utf-8",d.timeout=120,t.nc&&d.setAttribute("nonce",t.nc),d.setAttribute("data-webpack",n+o),d.src=r),e[r]=[s];var p=function(n,t){d.onerror=d.onload=null,clearTimeout(m);var s=e[r];if(delete e[r],d.parentNode&&d.parentNode.removeChild(d),s&&s.forEach((function(e){return e(t)})),n)return n(t)},m=setTimeout(p.bind(null,void 0,{type:"timeout",target:d}),12e4);d.onerror=p.bind(null,d.onerror),d.onload=p.bind(null,d.onload),i&&document.head.appendChild(d)}}}(),function(){t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){t.p="/"}(),function(){if("undefined"!==typeof document){var e=function(e,n,t,r,s){var o=document.createElement("link");o.rel="stylesheet",o.type="text/css";var a=function(t){if(o.onerror=o.onload=null,"load"===t.type)r();else{var a=t&&("load"===t.type?"missing":t.type),d=t&&t.target&&t.target.href||n,i=new Error("Loading CSS chunk "+e+" failed.\n("+d+")");i.code="CSS_CHUNK_LOAD_FAILED",i.type=a,i.request=d,o.parentNode&&o.parentNode.removeChild(o),s(i)}};return o.onerror=o.onload=a,o.href=n,t?t.parentNode.insertBefore(o,t.nextSibling):document.head.appendChild(o),o},n=function(e,n){for(var t=document.getElementsByTagName("link"),r=0;r<t.length;r++){var s=t[r],o=s.getAttribute("data-href")||s.getAttribute("href");if("stylesheet"===s.rel&&(o===e||o===n))return s}var a=document.getElementsByTagName("style");for(r=0;r<a.length;r++){s=a[r],o=s.getAttribute("data-href");if(o===e||o===n)return s}},r=function(r){return new Promise((function(s,o){var a=t.miniCssF(r),d=t.p+a;if(n(a,d))return s();e(r,d,null,s,o)}))},s={143:0};t.f.miniCss=function(e,n){var t={36:1,44:1,63:1,76:1,83:1,84:1,92:1,96:1,105:1,111:1,114:1,148:1,184:1,208:1,262:1,281:1,310:1,320:1,337:1,354:1,355:1,398:1,451:1,461:1,464:1,468:1,518:1,559:1,569:1,642:1,644:1,689:1,697:1,775:1,796:1,839:1,855:1,862:1,875:1,890:1,946:1,975:1};s[e]?n.push(s[e]):0!==s[e]&&t[e]&&n.push(s[e]=r(e).then((function(){s[e]=0}),(function(n){throw delete s[e],n})))}}}(),function(){var e={143:0};t.f.j=function(n,r){var s=t.o(e,n)?e[n]:void 0;if(0!==s)if(s)r.push(s[2]);else{var o=new Promise((function(t,r){s=e[n]=[t,r]}));r.push(s[2]=o);var a=t.p+t.u(n),d=new Error,i=function(r){if(t.o(e,n)&&(s=e[n],0!==s&&(e[n]=void 0),s)){var o=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;d.message="Loading chunk "+n+" failed.\n("+o+": "+a+")",d.name="ChunkLoadError",d.type=o,d.request=a,s[1](d)}};t.l(a,i,"chunk-"+n,n)}},t.O.j=function(n){return 0===e[n]};var n=function(n,r){var s,o,a=r[0],d=r[1],i=r[2],u=0;if(a.some((function(n){return 0!==e[n]}))){for(s in d)t.o(d,s)&&(t.m[s]=d[s]);if(i)var c=i(t)}for(n&&n(r);u<a.length;u++)o=a[u],t.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return t.O(c)},r=self["webpackChunkvue_3_authentication_jwt"]=self["webpackChunkvue_3_authentication_jwt"]||[];r.forEach(n.bind(null,0)),r.push=n.bind(null,r.push.bind(r))}();var r=t.O(void 0,[998],(function(){return t(2798)}));r=t.O(r)})();
//# sourceMappingURL=app.30eed78f.js.map